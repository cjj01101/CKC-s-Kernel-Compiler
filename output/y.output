语法

    0 $accept: program $end

    1 program: program externdef
    2        | ε

    3 externdef: function
    4          | declaration

    5 function: declarator LP parameters RP compoundstmt

    6 parameters: parameters COMMA declarator
    7           | declarator
    8           | TYPE_VOID
    9           | ε

   10 declaration: declarator SEM
   11            | declarator OP_ASSIGN expr SEM

   12 declarator: type identifier

   13 type: TYPE_INT
   14     | TYPE_FLOAT
   15     | TYPE_VOID

   16 identifier: ID

   17 statement: compoundstmt
   18          | exprstmt
   19          | ctrlstmt
   20          | jumpstmt

   21 compoundstmt: LBR items RBR

   22 items: items item
   23      | ε

   24 item: declaration
   25     | statement

   26 exprstmt: optexpr SEM

   27 optexpr: expr
   28        | ε

   29 expr: identifier OP_ASSIGN expr
   30     | logorexpr

   31 logorexpr: logorexpr OP_LOGOR logandexpr
   32          | logandexpr

   33 logandexpr: logandexpr OP_LOGAND orexpr
   34           | orexpr

   35 orexpr: orexpr OP_OR xorexpr
   36       | xorexpr

   37 xorexpr: xorexpr OP_XOR andexpr
   38        | andexpr

   39 andexpr: andexpr OP_AND ecmprexpr
   40        | ecmprexpr

   41 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   42          | ecmprexpr OP_NEQ cmprexpr
   43          | cmprexpr

   44 cmprexpr: cmprexpr OP_GT addexpr
   45         | cmprexpr OP_LT addexpr
   46         | cmprexpr OP_GTE addexpr
   47         | cmprexpr OP_LTE addexpr
   48         | addexpr

   49 addexpr: addexpr OP_ADD mulexpr
   50        | addexpr OP_SUB mulexpr
   51        | mulexpr

   52 mulexpr: mulexpr OP_MUL primaryexpr
   53        | mulexpr OP_DIV primaryexpr
   54        | mulexpr OP_MOD primaryexpr
   55        | primaryexpr

   56 primaryexpr: identifier
   57            | constant
   58            | LP expr RP
   59            | identifier LP arguments RP
   60            | OP_SUB primaryexpr
   61            | OP_NOT primaryexpr

   62 constant: NUM_INT
   63         | NUM_FLOAT

   64 arguments: arguments COMMA expr
   65          | expr
   66          | ε

   67 ctrlstmt: IF LP expr RP statement
   68         | IF LP expr RP statement ELSE statement
   69         | WHILE LP expr RP statement
   70         | FOR LP inititem optexpr SEM optexpr RP statement

   71 inititem: exprstmt
   72         | declaration

   73 jumpstmt: RETURN optexpr SEM


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    NUM_INT <intNum> (258) 62
    NUM_FLOAT <floatNum> (259) 63
    ID <str> (260) 16
    TYPE_INT (261) 13
    TYPE_FLOAT (262) 14
    TYPE_VOID (263) 8 15
    OP_ADD (264) 49
    OP_SUB (265) 50 60
    OP_MUL (266) 52
    OP_DIV (267) 53
    OP_MOD (268) 54
    OP_GT (269) 44
    OP_LT (270) 45
    OP_GTE (271) 46
    OP_LTE (272) 47
    OP_EQ (273) 41
    OP_NEQ (274) 42
    OP_AND (275) 39
    OP_XOR (276) 37
    OP_OR (277) 35
    OP_NOT (278) 61
    OP_LOGAND (279) 33
    OP_LOGOR (280) 31
    OP_ASSIGN (281) 11 29
    LP (282) 5 58 59 67 68 69 70
    RP (283) 5 58 59 67 68 69 70
    LBR (284) 21
    RBR (285) 21
    SEM (286) 10 11 26 70 73
    COMMA (287) 6 64
    IF (288) 67 68
    ELSE (289) 68
    WHILE (290) 69
    FOR (291) 70
    RETURN (292) 73
    IFX (293)


非终结语词，附有它们出现处的规则

    $accept (39)
        on left: 0
    program <unit> (40)
        on left: 1 2
        on right: 0 1
    externdef <node> (41)
        on left: 3 4
        on right: 1
    function <node> (42)
        on left: 5
        on right: 3
    parameters <parameters> (43)
        on left: 6 7 8 9
        on right: 5 6
    declaration <node> (44)
        on left: 10 11
        on right: 4 24 72
    declarator <declarator> (45)
        on left: 12
        on right: 5 6 7 10 11
    type <type> (46)
        on left: 13 14 15
        on right: 12
    identifier <identifier> (47)
        on left: 16
        on right: 12 29 56 59
    statement <statement> (48)
        on left: 17 18 19 20
        on right: 25 67 68 69 70
    compoundstmt <compound> (49)
        on left: 21
        on right: 5 17
    items <compound> (50)
        on left: 22 23
        on right: 21 22
    item <node> (51)
        on left: 24 25
        on right: 22
    exprstmt <statement> (52)
        on left: 26
        on right: 18 71
    optexpr <expression> (53)
        on left: 27 28
        on right: 26 70 73
    expr <expression> (54)
        on left: 29 30
        on right: 11 27 29 58 64 65 67 68 69
    logorexpr <expression> (55)
        on left: 31 32
        on right: 30 31
    logandexpr <expression> (56)
        on left: 33 34
        on right: 31 32 33
    orexpr <expression> (57)
        on left: 35 36
        on right: 33 34 35
    xorexpr <expression> (58)
        on left: 37 38
        on right: 35 36 37
    andexpr <expression> (59)
        on left: 39 40
        on right: 37 38 39
    ecmprexpr <expression> (60)
        on left: 41 42 43
        on right: 39 40 41 42
    cmprexpr <expression> (61)
        on left: 44 45 46 47 48
        on right: 41 42 43 44 45 46 47
    addexpr <expression> (62)
        on left: 49 50 51
        on right: 44 45 46 47 48 49 50
    mulexpr <expression> (63)
        on left: 52 53 54 55
        on right: 49 50 51 52 53 54
    primaryexpr <expression> (64)
        on left: 56 57 58 59 60 61
        on right: 52 53 54 55 60 61
    constant <expression> (65)
        on left: 62 63
        on right: 57
    arguments <arguments> (66)
        on left: 64 65 66
        on right: 59 64
    ctrlstmt <statement> (67)
        on left: 67 68 69 70
        on right: 19
    inititem <node> (68)
        on left: 71 72
        on right: 70
    jumpstmt <statement> (69)
        on left: 73
        on right: 20


状态 0

    0 $accept: • program $end

    $default  使用规则 2 以归约 (program)

    program  转到状态 1


状态 1

    0 $accept: program • $end
    1 program: program • externdef

    $end        偏移，并进入状态 2
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_VOID   偏移，并进入状态 5

    externdef    转到状态 6
    function     转到状态 7
    declaration  转到状态 8
    declarator   转到状态 9
    type         转到状态 10


状态 2

    0 $accept: program $end •

    $default  接受


状态 3

   13 type: TYPE_INT •

    $default  使用规则 13 以归约 (type)


状态 4

   14 type: TYPE_FLOAT •

    $default  使用规则 14 以归约 (type)


状态 5

   15 type: TYPE_VOID •

    $default  使用规则 15 以归约 (type)


状态 6

    1 program: program externdef •

    $default  使用规则 1 以归约 (program)


状态 7

    3 externdef: function •

    $default  使用规则 3 以归约 (externdef)


状态 8

    4 externdef: declaration •

    $default  使用规则 4 以归约 (externdef)


状态 9

    5 function: declarator • LP parameters RP compoundstmt
   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 11
    LP         偏移，并进入状态 12
    SEM        偏移，并进入状态 13


状态 10

   12 declarator: type • identifier

    ID  偏移，并进入状态 14

    identifier  转到状态 15


状态 11

   11 declaration: declarator OP_ASSIGN • expr SEM

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 21
    expr         转到状态 22
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 12

    5 function: declarator LP • parameters RP compoundstmt

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_VOID   偏移，并进入状态 34

    $default  使用规则 9 以归约 (parameters)

    parameters  转到状态 35
    declarator  转到状态 36
    type        转到状态 10


状态 13

   10 declaration: declarator SEM •

    $default  使用规则 10 以归约 (declaration)


状态 14

   16 identifier: ID •

    $default  使用规则 16 以归约 (identifier)


状态 15

   12 declarator: type identifier •

    $default  使用规则 12 以归约 (declarator)


状态 16

   62 constant: NUM_INT •

    $default  使用规则 62 以归约 (constant)


状态 17

   63 constant: NUM_FLOAT •

    $default  使用规则 63 以归约 (constant)


状态 18

   60 primaryexpr: OP_SUB • primaryexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 33


状态 19

   61 primaryexpr: OP_NOT • primaryexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    primaryexpr  转到状态 39
    constant     转到状态 33


状态 20

   58 primaryexpr: LP • expr RP

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 21
    expr         转到状态 40
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 21

   29 expr: identifier • OP_ASSIGN expr
   56 primaryexpr: identifier •
   59            | identifier • LP arguments RP

    OP_ASSIGN  偏移，并进入状态 41
    LP         偏移，并进入状态 42

    $default  使用规则 56 以归约 (primaryexpr)


状态 22

   11 declaration: declarator OP_ASSIGN expr • SEM

    SEM  偏移，并进入状态 43


状态 23

   30 expr: logorexpr •
   31 logorexpr: logorexpr • OP_LOGOR logandexpr

    OP_LOGOR  偏移，并进入状态 44

    $default  使用规则 30 以归约 (expr)


状态 24

   32 logorexpr: logandexpr •
   33 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 45

    $default  使用规则 32 以归约 (logorexpr)


状态 25

   34 logandexpr: orexpr •
   35 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 46

    $default  使用规则 34 以归约 (logandexpr)


状态 26

   36 orexpr: xorexpr •
   37 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 47

    $default  使用规则 36 以归约 (orexpr)


状态 27

   38 xorexpr: andexpr •
   39 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 48

    $default  使用规则 38 以归约 (xorexpr)


状态 28

   40 andexpr: ecmprexpr •
   41 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   42          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 49
    OP_NEQ  偏移，并进入状态 50

    $default  使用规则 40 以归约 (andexpr)


状态 29

   43 ecmprexpr: cmprexpr •
   44 cmprexpr: cmprexpr • OP_GT addexpr
   45         | cmprexpr • OP_LT addexpr
   46         | cmprexpr • OP_GTE addexpr
   47         | cmprexpr • OP_LTE addexpr

    OP_GT   偏移，并进入状态 51
    OP_LT   偏移，并进入状态 52
    OP_GTE  偏移，并进入状态 53
    OP_LTE  偏移，并进入状态 54

    $default  使用规则 43 以归约 (ecmprexpr)


状态 30

   48 cmprexpr: addexpr •
   49 addexpr: addexpr • OP_ADD mulexpr
   50        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 55
    OP_SUB  偏移，并进入状态 56

    $default  使用规则 48 以归约 (cmprexpr)


状态 31

   51 addexpr: mulexpr •
   52 mulexpr: mulexpr • OP_MUL primaryexpr
   53        | mulexpr • OP_DIV primaryexpr
   54        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 57
    OP_DIV  偏移，并进入状态 58
    OP_MOD  偏移，并进入状态 59

    $default  使用规则 51 以归约 (addexpr)


状态 32

   55 mulexpr: primaryexpr •

    $default  使用规则 55 以归约 (mulexpr)


状态 33

   57 primaryexpr: constant •

    $default  使用规则 57 以归约 (primaryexpr)


状态 34

    8 parameters: TYPE_VOID •
   15 type: TYPE_VOID •

    ID        使用规则 15 以归约 (type)
    $default  使用规则 8 以归约 (parameters)


状态 35

    5 function: declarator LP parameters • RP compoundstmt
    6 parameters: parameters • COMMA declarator

    RP     偏移，并进入状态 60
    COMMA  偏移，并进入状态 61


状态 36

    7 parameters: declarator •

    $default  使用规则 7 以归约 (parameters)


状态 37

   56 primaryexpr: identifier •
   59            | identifier • LP arguments RP

    LP  偏移，并进入状态 42

    $default  使用规则 56 以归约 (primaryexpr)


状态 38

   60 primaryexpr: OP_SUB primaryexpr •

    $default  使用规则 60 以归约 (primaryexpr)


状态 39

   61 primaryexpr: OP_NOT primaryexpr •

    $default  使用规则 61 以归约 (primaryexpr)


状态 40

   58 primaryexpr: LP expr • RP

    RP  偏移，并进入状态 62


状态 41

   29 expr: identifier OP_ASSIGN • expr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 21
    expr         转到状态 63
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 42

   59 primaryexpr: identifier LP • arguments RP

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    $default  使用规则 66 以归约 (arguments)

    identifier   转到状态 21
    expr         转到状态 64
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33
    arguments    转到状态 65


状态 43

   11 declaration: declarator OP_ASSIGN expr SEM •

    $default  使用规则 11 以归约 (declaration)


状态 44

   31 logorexpr: logorexpr OP_LOGOR • logandexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    logandexpr   转到状态 66
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 45

   33 logandexpr: logandexpr OP_LOGAND • orexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    orexpr       转到状态 67
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 46

   35 orexpr: orexpr OP_OR • xorexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    xorexpr      转到状态 68
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 47

   37 xorexpr: xorexpr OP_XOR • andexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    andexpr      转到状态 69
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 48

   39 andexpr: andexpr OP_AND • ecmprexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    ecmprexpr    转到状态 70
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 49

   41 ecmprexpr: ecmprexpr OP_EQ • cmprexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    cmprexpr     转到状态 71
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 50

   42 ecmprexpr: ecmprexpr OP_NEQ • cmprexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    cmprexpr     转到状态 72
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 51

   44 cmprexpr: cmprexpr OP_GT • addexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    addexpr      转到状态 73
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 52

   45 cmprexpr: cmprexpr OP_LT • addexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    addexpr      转到状态 74
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 53

   46 cmprexpr: cmprexpr OP_GTE • addexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    addexpr      转到状态 75
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 54

   47 cmprexpr: cmprexpr OP_LTE • addexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    addexpr      转到状态 76
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 55

   49 addexpr: addexpr OP_ADD • mulexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    mulexpr      转到状态 77
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 56

   50 addexpr: addexpr OP_SUB • mulexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    mulexpr      转到状态 78
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 57

   52 mulexpr: mulexpr OP_MUL • primaryexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    primaryexpr  转到状态 79
    constant     转到状态 33


状态 58

   53 mulexpr: mulexpr OP_DIV • primaryexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    primaryexpr  转到状态 80
    constant     转到状态 33


状态 59

   54 mulexpr: mulexpr OP_MOD • primaryexpr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 37
    primaryexpr  转到状态 81
    constant     转到状态 33


状态 60

    5 function: declarator LP parameters RP • compoundstmt

    LBR  偏移，并进入状态 82

    compoundstmt  转到状态 83


状态 61

    6 parameters: parameters COMMA • declarator

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_VOID   偏移，并进入状态 5

    declarator  转到状态 84
    type        转到状态 10


状态 62

   58 primaryexpr: LP expr RP •

    $default  使用规则 58 以归约 (primaryexpr)


状态 63

   29 expr: identifier OP_ASSIGN expr •

    $default  使用规则 29 以归约 (expr)


状态 64

   65 arguments: expr •

    $default  使用规则 65 以归约 (arguments)


状态 65

   59 primaryexpr: identifier LP arguments • RP
   64 arguments: arguments • COMMA expr

    RP     偏移，并进入状态 85
    COMMA  偏移，并进入状态 86


状态 66

   31 logorexpr: logorexpr OP_LOGOR logandexpr •
   33 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 45

    $default  使用规则 31 以归约 (logorexpr)


状态 67

   33 logandexpr: logandexpr OP_LOGAND orexpr •
   35 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 46

    $default  使用规则 33 以归约 (logandexpr)


状态 68

   35 orexpr: orexpr OP_OR xorexpr •
   37 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 47

    $default  使用规则 35 以归约 (orexpr)


状态 69

   37 xorexpr: xorexpr OP_XOR andexpr •
   39 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 48

    $default  使用规则 37 以归约 (xorexpr)


状态 70

   39 andexpr: andexpr OP_AND ecmprexpr •
   41 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   42          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 49
    OP_NEQ  偏移，并进入状态 50

    $default  使用规则 39 以归约 (andexpr)


状态 71

   41 ecmprexpr: ecmprexpr OP_EQ cmprexpr •
   44 cmprexpr: cmprexpr • OP_GT addexpr
   45         | cmprexpr • OP_LT addexpr
   46         | cmprexpr • OP_GTE addexpr
   47         | cmprexpr • OP_LTE addexpr

    OP_GT   偏移，并进入状态 51
    OP_LT   偏移，并进入状态 52
    OP_GTE  偏移，并进入状态 53
    OP_LTE  偏移，并进入状态 54

    $default  使用规则 41 以归约 (ecmprexpr)


状态 72

   42 ecmprexpr: ecmprexpr OP_NEQ cmprexpr •
   44 cmprexpr: cmprexpr • OP_GT addexpr
   45         | cmprexpr • OP_LT addexpr
   46         | cmprexpr • OP_GTE addexpr
   47         | cmprexpr • OP_LTE addexpr

    OP_GT   偏移，并进入状态 51
    OP_LT   偏移，并进入状态 52
    OP_GTE  偏移，并进入状态 53
    OP_LTE  偏移，并进入状态 54

    $default  使用规则 42 以归约 (ecmprexpr)


状态 73

   44 cmprexpr: cmprexpr OP_GT addexpr •
   49 addexpr: addexpr • OP_ADD mulexpr
   50        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 55
    OP_SUB  偏移，并进入状态 56

    $default  使用规则 44 以归约 (cmprexpr)


状态 74

   45 cmprexpr: cmprexpr OP_LT addexpr •
   49 addexpr: addexpr • OP_ADD mulexpr
   50        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 55
    OP_SUB  偏移，并进入状态 56

    $default  使用规则 45 以归约 (cmprexpr)


状态 75

   46 cmprexpr: cmprexpr OP_GTE addexpr •
   49 addexpr: addexpr • OP_ADD mulexpr
   50        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 55
    OP_SUB  偏移，并进入状态 56

    $default  使用规则 46 以归约 (cmprexpr)


状态 76

   47 cmprexpr: cmprexpr OP_LTE addexpr •
   49 addexpr: addexpr • OP_ADD mulexpr
   50        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 55
    OP_SUB  偏移，并进入状态 56

    $default  使用规则 47 以归约 (cmprexpr)


状态 77

   49 addexpr: addexpr OP_ADD mulexpr •
   52 mulexpr: mulexpr • OP_MUL primaryexpr
   53        | mulexpr • OP_DIV primaryexpr
   54        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 57
    OP_DIV  偏移，并进入状态 58
    OP_MOD  偏移，并进入状态 59

    $default  使用规则 49 以归约 (addexpr)


状态 78

   50 addexpr: addexpr OP_SUB mulexpr •
   52 mulexpr: mulexpr • OP_MUL primaryexpr
   53        | mulexpr • OP_DIV primaryexpr
   54        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 57
    OP_DIV  偏移，并进入状态 58
    OP_MOD  偏移，并进入状态 59

    $default  使用规则 50 以归约 (addexpr)


状态 79

   52 mulexpr: mulexpr OP_MUL primaryexpr •

    $default  使用规则 52 以归约 (mulexpr)


状态 80

   53 mulexpr: mulexpr OP_DIV primaryexpr •

    $default  使用规则 53 以归约 (mulexpr)


状态 81

   54 mulexpr: mulexpr OP_MOD primaryexpr •

    $default  使用规则 54 以归约 (mulexpr)


状态 82

   21 compoundstmt: LBR • items RBR

    $default  使用规则 23 以归约 (items)

    items  转到状态 87


状态 83

    5 function: declarator LP parameters RP compoundstmt •

    $default  使用规则 5 以归约 (function)


状态 84

    6 parameters: parameters COMMA declarator •

    $default  使用规则 6 以归约 (parameters)


状态 85

   59 primaryexpr: identifier LP arguments RP •

    $default  使用规则 59 以归约 (primaryexpr)


状态 86

   64 arguments: arguments COMMA • expr

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 21
    expr         转到状态 88
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 87

   21 compoundstmt: LBR items • RBR
   22 items: items • item

    NUM_INT     偏移，并进入状态 16
    NUM_FLOAT   偏移，并进入状态 17
    ID          偏移，并进入状态 14
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_VOID   偏移，并进入状态 5
    OP_SUB      偏移，并进入状态 18
    OP_NOT      偏移，并进入状态 19
    LP          偏移，并进入状态 20
    LBR         偏移，并进入状态 82
    RBR         偏移，并进入状态 89
    IF          偏移，并进入状态 90
    WHILE       偏移，并进入状态 91
    FOR         偏移，并进入状态 92
    RETURN      偏移，并进入状态 93

    $default  使用规则 28 以归约 (optexpr)

    declaration   转到状态 94
    declarator    转到状态 95
    type          转到状态 10
    identifier    转到状态 21
    statement     转到状态 96
    compoundstmt  转到状态 97
    item          转到状态 98
    exprstmt      转到状态 99
    optexpr       转到状态 100
    expr          转到状态 101
    logorexpr     转到状态 23
    logandexpr    转到状态 24
    orexpr        转到状态 25
    xorexpr       转到状态 26
    andexpr       转到状态 27
    ecmprexpr     转到状态 28
    cmprexpr      转到状态 29
    addexpr       转到状态 30
    mulexpr       转到状态 31
    primaryexpr   转到状态 32
    constant      转到状态 33
    ctrlstmt      转到状态 102
    jumpstmt      转到状态 103


状态 88

   64 arguments: arguments COMMA expr •

    $default  使用规则 64 以归约 (arguments)


状态 89

   21 compoundstmt: LBR items RBR •

    $default  使用规则 21 以归约 (compoundstmt)


状态 90

   67 ctrlstmt: IF • LP expr RP statement
   68         | IF • LP expr RP statement ELSE statement

    LP  偏移，并进入状态 104


状态 91

   69 ctrlstmt: WHILE • LP expr RP statement

    LP  偏移，并进入状态 105


状态 92

   70 ctrlstmt: FOR • LP inititem optexpr SEM optexpr RP statement

    LP  偏移，并进入状态 106


状态 93

   73 jumpstmt: RETURN • optexpr SEM

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    $default  使用规则 28 以归约 (optexpr)

    identifier   转到状态 21
    optexpr      转到状态 107
    expr         转到状态 101
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 94

   24 item: declaration •

    $default  使用规则 24 以归约 (item)


状态 95

   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 11
    SEM        偏移，并进入状态 13


状态 96

   25 item: statement •

    $default  使用规则 25 以归约 (item)


状态 97

   17 statement: compoundstmt •

    $default  使用规则 17 以归约 (statement)


状态 98

   22 items: items item •

    $default  使用规则 22 以归约 (items)


状态 99

   18 statement: exprstmt •

    $default  使用规则 18 以归约 (statement)


状态 100

   26 exprstmt: optexpr • SEM

    SEM  偏移，并进入状态 108


状态 101

   27 optexpr: expr •

    $default  使用规则 27 以归约 (optexpr)


状态 102

   19 statement: ctrlstmt •

    $default  使用规则 19 以归约 (statement)


状态 103

   20 statement: jumpstmt •

    $default  使用规则 20 以归约 (statement)


状态 104

   67 ctrlstmt: IF LP • expr RP statement
   68         | IF LP • expr RP statement ELSE statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 21
    expr         转到状态 109
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 105

   69 ctrlstmt: WHILE LP • expr RP statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    identifier   转到状态 21
    expr         转到状态 110
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 106

   70 ctrlstmt: FOR LP • inititem optexpr SEM optexpr RP statement

    NUM_INT     偏移，并进入状态 16
    NUM_FLOAT   偏移，并进入状态 17
    ID          偏移，并进入状态 14
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_VOID   偏移，并进入状态 5
    OP_SUB      偏移，并进入状态 18
    OP_NOT      偏移，并进入状态 19
    LP          偏移，并进入状态 20

    $default  使用规则 28 以归约 (optexpr)

    declaration  转到状态 111
    declarator   转到状态 95
    type         转到状态 10
    identifier   转到状态 21
    exprstmt     转到状态 112
    optexpr      转到状态 100
    expr         转到状态 101
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33
    inititem     转到状态 113


状态 107

   73 jumpstmt: RETURN optexpr • SEM

    SEM  偏移，并进入状态 114


状态 108

   26 exprstmt: optexpr SEM •

    $default  使用规则 26 以归约 (exprstmt)


状态 109

   67 ctrlstmt: IF LP expr • RP statement
   68         | IF LP expr • RP statement ELSE statement

    RP  偏移，并进入状态 115


状态 110

   69 ctrlstmt: WHILE LP expr • RP statement

    RP  偏移，并进入状态 116


状态 111

   72 inititem: declaration •

    $default  使用规则 72 以归约 (inititem)


状态 112

   71 inititem: exprstmt •

    $default  使用规则 71 以归约 (inititem)


状态 113

   70 ctrlstmt: FOR LP inititem • optexpr SEM optexpr RP statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    $default  使用规则 28 以归约 (optexpr)

    identifier   转到状态 21
    optexpr      转到状态 117
    expr         转到状态 101
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 114

   73 jumpstmt: RETURN optexpr SEM •

    $default  使用规则 73 以归约 (jumpstmt)


状态 115

   67 ctrlstmt: IF LP expr RP • statement
   68         | IF LP expr RP • statement ELSE statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20
    LBR        偏移，并进入状态 82
    IF         偏移，并进入状态 90
    WHILE      偏移，并进入状态 91
    FOR        偏移，并进入状态 92
    RETURN     偏移，并进入状态 93

    $default  使用规则 28 以归约 (optexpr)

    identifier    转到状态 21
    statement     转到状态 118
    compoundstmt  转到状态 97
    exprstmt      转到状态 99
    optexpr       转到状态 100
    expr          转到状态 101
    logorexpr     转到状态 23
    logandexpr    转到状态 24
    orexpr        转到状态 25
    xorexpr       转到状态 26
    andexpr       转到状态 27
    ecmprexpr     转到状态 28
    cmprexpr      转到状态 29
    addexpr       转到状态 30
    mulexpr       转到状态 31
    primaryexpr   转到状态 32
    constant      转到状态 33
    ctrlstmt      转到状态 102
    jumpstmt      转到状态 103


状态 116

   69 ctrlstmt: WHILE LP expr RP • statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20
    LBR        偏移，并进入状态 82
    IF         偏移，并进入状态 90
    WHILE      偏移，并进入状态 91
    FOR        偏移，并进入状态 92
    RETURN     偏移，并进入状态 93

    $default  使用规则 28 以归约 (optexpr)

    identifier    转到状态 21
    statement     转到状态 119
    compoundstmt  转到状态 97
    exprstmt      转到状态 99
    optexpr       转到状态 100
    expr          转到状态 101
    logorexpr     转到状态 23
    logandexpr    转到状态 24
    orexpr        转到状态 25
    xorexpr       转到状态 26
    andexpr       转到状态 27
    ecmprexpr     转到状态 28
    cmprexpr      转到状态 29
    addexpr       转到状态 30
    mulexpr       转到状态 31
    primaryexpr   转到状态 32
    constant      转到状态 33
    ctrlstmt      转到状态 102
    jumpstmt      转到状态 103


状态 117

   70 ctrlstmt: FOR LP inititem optexpr • SEM optexpr RP statement

    SEM  偏移，并进入状态 120


状态 118

   67 ctrlstmt: IF LP expr RP statement •
   68         | IF LP expr RP statement • ELSE statement

    ELSE  偏移，并进入状态 121

    $default  使用规则 67 以归约 (ctrlstmt)


状态 119

   69 ctrlstmt: WHILE LP expr RP statement •

    $default  使用规则 69 以归约 (ctrlstmt)


状态 120

   70 ctrlstmt: FOR LP inititem optexpr SEM • optexpr RP statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20

    $default  使用规则 28 以归约 (optexpr)

    identifier   转到状态 21
    optexpr      转到状态 122
    expr         转到状态 101
    logorexpr    转到状态 23
    logandexpr   转到状态 24
    orexpr       转到状态 25
    xorexpr      转到状态 26
    andexpr      转到状态 27
    ecmprexpr    转到状态 28
    cmprexpr     转到状态 29
    addexpr      转到状态 30
    mulexpr      转到状态 31
    primaryexpr  转到状态 32
    constant     转到状态 33


状态 121

   68 ctrlstmt: IF LP expr RP statement ELSE • statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20
    LBR        偏移，并进入状态 82
    IF         偏移，并进入状态 90
    WHILE      偏移，并进入状态 91
    FOR        偏移，并进入状态 92
    RETURN     偏移，并进入状态 93

    $default  使用规则 28 以归约 (optexpr)

    identifier    转到状态 21
    statement     转到状态 123
    compoundstmt  转到状态 97
    exprstmt      转到状态 99
    optexpr       转到状态 100
    expr          转到状态 101
    logorexpr     转到状态 23
    logandexpr    转到状态 24
    orexpr        转到状态 25
    xorexpr       转到状态 26
    andexpr       转到状态 27
    ecmprexpr     转到状态 28
    cmprexpr      转到状态 29
    addexpr       转到状态 30
    mulexpr       转到状态 31
    primaryexpr   转到状态 32
    constant      转到状态 33
    ctrlstmt      转到状态 102
    jumpstmt      转到状态 103


状态 122

   70 ctrlstmt: FOR LP inititem optexpr SEM optexpr • RP statement

    RP  偏移，并进入状态 124


状态 123

   68 ctrlstmt: IF LP expr RP statement ELSE statement •

    $default  使用规则 68 以归约 (ctrlstmt)


状态 124

   70 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP • statement

    NUM_INT    偏移，并进入状态 16
    NUM_FLOAT  偏移，并进入状态 17
    ID         偏移，并进入状态 14
    OP_SUB     偏移，并进入状态 18
    OP_NOT     偏移，并进入状态 19
    LP         偏移，并进入状态 20
    LBR        偏移，并进入状态 82
    IF         偏移，并进入状态 90
    WHILE      偏移，并进入状态 91
    FOR        偏移，并进入状态 92
    RETURN     偏移，并进入状态 93

    $default  使用规则 28 以归约 (optexpr)

    identifier    转到状态 21
    statement     转到状态 125
    compoundstmt  转到状态 97
    exprstmt      转到状态 99
    optexpr       转到状态 100
    expr          转到状态 101
    logorexpr     转到状态 23
    logandexpr    转到状态 24
    orexpr        转到状态 25
    xorexpr       转到状态 26
    andexpr       转到状态 27
    ecmprexpr     转到状态 28
    cmprexpr      转到状态 29
    addexpr       转到状态 30
    mulexpr       转到状态 31
    primaryexpr   转到状态 32
    constant      转到状态 33
    ctrlstmt      转到状态 102
    jumpstmt      转到状态 103


状态 125

   70 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP statement •

    $default  使用规则 70 以归约 (ctrlstmt)
