语法

    0 $accept: program $end

    1 program: program externdef
    2        | ε

    3 externdef: function
    4          | declaration

    5 function: type identifier LP parameters RP compoundstmt

    6 parameters: parameters COMMA parameter
    7           | parameter
    8           | TYPE_VOID
    9           | ε

   10 parameter: type identifier

   11 declaration: type declarator SEM
   12            | type declarator OP_ASSIGN expr SEM

   13 declarator: identifier

   14 type: TYPE_INT
   15     | TYPE_FLOAT
   16     | TYPE_BOOL
   17     | TYPE_VOID

   18 identifier: ID

   19 statement: compoundstmt
   20          | exprstmt
   21          | ctrlstmt
   22          | jumpstmt

   23 compoundstmt: LBR items RBR

   24 items: items item
   25      | ε

   26 item: declaration
   27     | statement

   28 exprstmt: optexpr SEM

   29 optexpr: expr
   30        | ε

   31 expr: expr COMMA assignexpr
   32     | assignexpr

   33 assignexpr: identifier OP_ASSIGN assignexpr
   34           | identifier OP_ADD_ASSIGN assignexpr
   35           | identifier OP_SUB_ASSIGN assignexpr
   36           | identifier OP_MUL_ASSIGN assignexpr
   37           | identifier OP_DIV_ASSIGN assignexpr
   38           | identifier OP_MOD_ASSIGN assignexpr
   39           | identifier OP_SHL_ASSIGN assignexpr
   40           | identifier OP_SHR_ASSIGN assignexpr
   41           | identifier OP_AND_ASSIGN assignexpr
   42           | identifier OP_OR_ASSIGN assignexpr
   43           | identifier OP_XOR_ASSIGN assignexpr
   44           | condexpr

   45 condexpr: logorexpr QUEST expr COLON condexpr
   46         | logorexpr

   47 logorexpr: logorexpr OP_LOGOR logandexpr
   48          | logandexpr

   49 logandexpr: logandexpr OP_LOGAND orexpr
   50           | orexpr

   51 orexpr: orexpr OP_OR xorexpr
   52       | xorexpr

   53 xorexpr: xorexpr OP_XOR andexpr
   54        | andexpr

   55 andexpr: andexpr OP_AND ecmprexpr
   56        | ecmprexpr

   57 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   58          | ecmprexpr OP_NEQ cmprexpr
   59          | cmprexpr

   60 cmprexpr: cmprexpr OP_GT shiftexpr
   61         | cmprexpr OP_LT shiftexpr
   62         | cmprexpr OP_GTE shiftexpr
   63         | cmprexpr OP_LTE shiftexpr
   64         | shiftexpr

   65 shiftexpr: shiftexpr OP_SHL addexpr
   66          | shiftexpr OP_SHR addexpr
   67          | addexpr

   68 addexpr: addexpr OP_ADD mulexpr
   69        | addexpr OP_SUB mulexpr
   70        | mulexpr

   71 mulexpr: mulexpr OP_MUL primaryexpr
   72        | mulexpr OP_DIV primaryexpr
   73        | mulexpr OP_MOD primaryexpr
   74        | primaryexpr

   75 primaryexpr: identifier
   76            | constant
   77            | LP expr RP
   78            | identifier LP arguments RP
   79            | OP_ADD primaryexpr
   80            | OP_SUB primaryexpr
   81            | OP_NOT primaryexpr
   82            | OP_LOGNOT primaryexpr

   83 constant: NUM_INT
   84         | NUM_FLOAT
   85         | NUM_BOOL

   86 arguments: arguments COMMA assignexpr
   87          | assignexpr
   88          | ε

   89 ctrlstmt: IF LP expr RP statement
   90         | IF LP expr RP statement ELSE statement
   91         | WHILE LP expr RP statement
   92         | FOR LP inititem optexpr SEM optexpr RP statement

   93 inititem: exprstmt
   94         | declaration

   95 jumpstmt: RETURN optexpr SEM


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    NUM_INT <intNum> (258) 83
    NUM_FLOAT <floatNum> (259) 84
    NUM_BOOL <boolNum> (260) 85
    ID <str> (261) 18
    TYPE_INT (262) 14
    TYPE_FLOAT (263) 15
    TYPE_BOOL (264) 16
    TYPE_VOID (265) 8 17
    OP_ADD (266) 68 79
    OP_SUB (267) 69 80
    OP_MUL (268) 71
    OP_DIV (269) 72
    OP_MOD (270) 73
    OP_SHL (271) 65
    OP_SHR (272) 66
    OP_GT (273) 60
    OP_LT (274) 61
    OP_GTE (275) 62
    OP_LTE (276) 63
    OP_EQ (277) 57
    OP_NEQ (278) 58
    OP_AND (279) 55
    OP_XOR (280) 53
    OP_OR (281) 51
    OP_NOT (282) 81
    OP_LOGAND (283) 49
    OP_LOGOR (284) 47
    OP_LOGNOT (285) 82
    OP_ASSIGN (286) 12 33
    OP_ADD_ASSIGN (287) 34
    OP_SUB_ASSIGN (288) 35
    OP_MUL_ASSIGN (289) 36
    OP_DIV_ASSIGN (290) 37
    OP_MOD_ASSIGN (291) 38
    OP_SHL_ASSIGN (292) 39
    OP_SHR_ASSIGN (293) 40
    OP_AND_ASSIGN (294) 41
    OP_OR_ASSIGN (295) 42
    OP_XOR_ASSIGN (296) 43
    LP (297) 5 77 78 89 90 91 92
    RP (298) 5 77 78 89 90 91 92
    LBR (299) 23
    RBR (300) 23
    SEM (301) 11 12 28 92 95
    COMMA (302) 6 31 86
    QUEST (303) 45
    COLON (304) 45
    IF (305) 89 90
    ELSE (306) 90
    WHILE (307) 91
    FOR (308) 92
    RETURN (309) 95
    IFX (310)


非终结语词，附有它们出现处的规则

    $accept (56)
        on left: 0
    program <unit> (57)
        on left: 1 2
        on right: 0 1
    externdef <node> (58)
        on left: 3 4
        on right: 1
    function <node> (59)
        on left: 5
        on right: 3
    parameters <parameters> (60)
        on left: 6 7 8 9
        on right: 5 6
    parameter <declaration> (61)
        on left: 10
        on right: 6 7
    declaration <node> (62)
        on left: 11 12
        on right: 4 26 94
    declarator <identifier> (63)
        on left: 13
        on right: 11 12
    type <type> (64)
        on left: 14 15 16 17
        on right: 5 10 11 12
    identifier <identifier> (65)
        on left: 18
        on right: 5 10 13 33 34 35 36 37 38 39 40 41 42 43 75 78
    statement <statement> (66)
        on left: 19 20 21 22
        on right: 27 89 90 91 92
    compoundstmt <compound> (67)
        on left: 23
        on right: 5 19
    items <compound> (68)
        on left: 24 25
        on right: 23 24
    item <node> (69)
        on left: 26 27
        on right: 24
    exprstmt <statement> (70)
        on left: 28
        on right: 20 93
    optexpr <expression> (71)
        on left: 29 30
        on right: 28 92 95
    expr <expression> (72)
        on left: 31 32
        on right: 12 29 31 45 77 89 90 91
    assignexpr <expression> (73)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 31 32 33 34 35 36 37 38 39 40 41 42 43 86 87
    condexpr <expression> (74)
        on left: 45 46
        on right: 44 45
    logorexpr <expression> (75)
        on left: 47 48
        on right: 45 46 47
    logandexpr <expression> (76)
        on left: 49 50
        on right: 47 48 49
    orexpr <expression> (77)
        on left: 51 52
        on right: 49 50 51
    xorexpr <expression> (78)
        on left: 53 54
        on right: 51 52 53
    andexpr <expression> (79)
        on left: 55 56
        on right: 53 54 55
    ecmprexpr <expression> (80)
        on left: 57 58 59
        on right: 55 56 57 58
    cmprexpr <expression> (81)
        on left: 60 61 62 63 64
        on right: 57 58 59 60 61 62 63
    shiftexpr <expression> (82)
        on left: 65 66 67
        on right: 60 61 62 63 64 65 66
    addexpr <expression> (83)
        on left: 68 69 70
        on right: 65 66 67 68 69
    mulexpr <expression> (84)
        on left: 71 72 73 74
        on right: 68 69 70 71 72 73
    primaryexpr <expression> (85)
        on left: 75 76 77 78 79 80 81 82
        on right: 71 72 73 74 79 80 81 82
    constant <expression> (86)
        on left: 83 84 85
        on right: 76
    arguments <arguments> (87)
        on left: 86 87 88
        on right: 78 86
    ctrlstmt <statement> (88)
        on left: 89 90 91 92
        on right: 21
    inititem <node> (89)
        on left: 93 94
        on right: 92
    jumpstmt <statement> (90)
        on left: 95
        on right: 22


状态 0

    0 $accept: • program $end

    $default  使用规则 2 以归约 (program)

    program  转到状态 1


状态 1

    0 $accept: program • $end
    1 program: program • externdef

    $end        偏移，并进入状态 2
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    externdef    转到状态 7
    function     转到状态 8
    declaration  转到状态 9
    type         转到状态 10


状态 2

    0 $accept: program $end •

    $default  接受


状态 3

   14 type: TYPE_INT •

    $default  使用规则 14 以归约 (type)


状态 4

   15 type: TYPE_FLOAT •

    $default  使用规则 15 以归约 (type)


状态 5

   16 type: TYPE_BOOL •

    $default  使用规则 16 以归约 (type)


状态 6

   17 type: TYPE_VOID •

    $default  使用规则 17 以归约 (type)


状态 7

    1 program: program externdef •

    $default  使用规则 1 以归约 (program)


状态 8

    3 externdef: function •

    $default  使用规则 3 以归约 (externdef)


状态 9

    4 externdef: declaration •

    $default  使用规则 4 以归约 (externdef)


状态 10

    5 function: type • identifier LP parameters RP compoundstmt
   11 declaration: type • declarator SEM
   12            | type • declarator OP_ASSIGN expr SEM

    ID  偏移，并进入状态 11

    declarator  转到状态 12
    identifier  转到状态 13


状态 11

   18 identifier: ID •

    $default  使用规则 18 以归约 (identifier)


状态 12

   11 declaration: type declarator • SEM
   12            | type declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 14
    SEM        偏移，并进入状态 15


状态 13

    5 function: type identifier • LP parameters RP compoundstmt
   13 declarator: identifier •

    LP  偏移，并进入状态 16

    $default  使用规则 13 以归约 (declarator)


状态 14

   12 declaration: type declarator OP_ASSIGN • expr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    expr         转到状态 26
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 15

   11 declaration: type declarator SEM •

    $default  使用规则 11 以归约 (declaration)


状态 16

    5 function: type identifier LP • parameters RP compoundstmt

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 41

    $default  使用规则 9 以归约 (parameters)

    parameters  转到状态 42
    parameter   转到状态 43
    type        转到状态 44


状态 17

   83 constant: NUM_INT •

    $default  使用规则 83 以归约 (constant)


状态 18

   84 constant: NUM_FLOAT •

    $default  使用规则 84 以归约 (constant)


状态 19

   85 constant: NUM_BOOL •

    $default  使用规则 85 以归约 (constant)


状态 20

   79 primaryexpr: OP_ADD • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    primaryexpr  转到状态 46
    constant     转到状态 40


状态 21

   80 primaryexpr: OP_SUB • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    primaryexpr  转到状态 47
    constant     转到状态 40


状态 22

   81 primaryexpr: OP_NOT • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    primaryexpr  转到状态 48
    constant     转到状态 40


状态 23

   82 primaryexpr: OP_LOGNOT • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    primaryexpr  转到状态 49
    constant     转到状态 40


状态 24

   77 primaryexpr: LP • expr RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    expr         转到状态 50
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 25

   33 assignexpr: identifier • OP_ASSIGN assignexpr
   34           | identifier • OP_ADD_ASSIGN assignexpr
   35           | identifier • OP_SUB_ASSIGN assignexpr
   36           | identifier • OP_MUL_ASSIGN assignexpr
   37           | identifier • OP_DIV_ASSIGN assignexpr
   38           | identifier • OP_MOD_ASSIGN assignexpr
   39           | identifier • OP_SHL_ASSIGN assignexpr
   40           | identifier • OP_SHR_ASSIGN assignexpr
   41           | identifier • OP_AND_ASSIGN assignexpr
   42           | identifier • OP_OR_ASSIGN assignexpr
   43           | identifier • OP_XOR_ASSIGN assignexpr
   75 primaryexpr: identifier •
   78            | identifier • LP arguments RP

    OP_ASSIGN      偏移，并进入状态 51
    OP_ADD_ASSIGN  偏移，并进入状态 52
    OP_SUB_ASSIGN  偏移，并进入状态 53
    OP_MUL_ASSIGN  偏移，并进入状态 54
    OP_DIV_ASSIGN  偏移，并进入状态 55
    OP_MOD_ASSIGN  偏移，并进入状态 56
    OP_SHL_ASSIGN  偏移，并进入状态 57
    OP_SHR_ASSIGN  偏移，并进入状态 58
    OP_AND_ASSIGN  偏移，并进入状态 59
    OP_OR_ASSIGN   偏移，并进入状态 60
    OP_XOR_ASSIGN  偏移，并进入状态 61
    LP             偏移，并进入状态 62

    $default  使用规则 75 以归约 (primaryexpr)


状态 26

   12 declaration: type declarator OP_ASSIGN expr • SEM
   31 expr: expr • COMMA assignexpr

    SEM    偏移，并进入状态 63
    COMMA  偏移，并进入状态 64


状态 27

   32 expr: assignexpr •

    $default  使用规则 32 以归约 (expr)


状态 28

   44 assignexpr: condexpr •

    $default  使用规则 44 以归约 (assignexpr)


状态 29

   45 condexpr: logorexpr • QUEST expr COLON condexpr
   46         | logorexpr •
   47 logorexpr: logorexpr • OP_LOGOR logandexpr

    OP_LOGOR  偏移，并进入状态 65
    QUEST     偏移，并进入状态 66

    $default  使用规则 46 以归约 (condexpr)


状态 30

   48 logorexpr: logandexpr •
   49 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 67

    $default  使用规则 48 以归约 (logorexpr)


状态 31

   50 logandexpr: orexpr •
   51 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 68

    $default  使用规则 50 以归约 (logandexpr)


状态 32

   52 orexpr: xorexpr •
   53 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 69

    $default  使用规则 52 以归约 (orexpr)


状态 33

   54 xorexpr: andexpr •
   55 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 70

    $default  使用规则 54 以归约 (xorexpr)


状态 34

   56 andexpr: ecmprexpr •
   57 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   58          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 71
    OP_NEQ  偏移，并进入状态 72

    $default  使用规则 56 以归约 (andexpr)


状态 35

   59 ecmprexpr: cmprexpr •
   60 cmprexpr: cmprexpr • OP_GT shiftexpr
   61         | cmprexpr • OP_LT shiftexpr
   62         | cmprexpr • OP_GTE shiftexpr
   63         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 73
    OP_LT   偏移，并进入状态 74
    OP_GTE  偏移，并进入状态 75
    OP_LTE  偏移，并进入状态 76

    $default  使用规则 59 以归约 (ecmprexpr)


状态 36

   64 cmprexpr: shiftexpr •
   65 shiftexpr: shiftexpr • OP_SHL addexpr
   66          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 77
    OP_SHR  偏移，并进入状态 78

    $default  使用规则 64 以归约 (cmprexpr)


状态 37

   67 shiftexpr: addexpr •
   68 addexpr: addexpr • OP_ADD mulexpr
   69        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 79
    OP_SUB  偏移，并进入状态 80

    $default  使用规则 67 以归约 (shiftexpr)


状态 38

   70 addexpr: mulexpr •
   71 mulexpr: mulexpr • OP_MUL primaryexpr
   72        | mulexpr • OP_DIV primaryexpr
   73        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 81
    OP_DIV  偏移，并进入状态 82
    OP_MOD  偏移，并进入状态 83

    $default  使用规则 70 以归约 (addexpr)


状态 39

   74 mulexpr: primaryexpr •

    $default  使用规则 74 以归约 (mulexpr)


状态 40

   76 primaryexpr: constant •

    $default  使用规则 76 以归约 (primaryexpr)


状态 41

    8 parameters: TYPE_VOID •
   17 type: TYPE_VOID •

    ID        使用规则 17 以归约 (type)
    $default  使用规则 8 以归约 (parameters)


状态 42

    5 function: type identifier LP parameters • RP compoundstmt
    6 parameters: parameters • COMMA parameter

    RP     偏移，并进入状态 84
    COMMA  偏移，并进入状态 85


状态 43

    7 parameters: parameter •

    $default  使用规则 7 以归约 (parameters)


状态 44

   10 parameter: type • identifier

    ID  偏移，并进入状态 11

    identifier  转到状态 86


状态 45

   75 primaryexpr: identifier •
   78            | identifier • LP arguments RP

    LP  偏移，并进入状态 62

    $default  使用规则 75 以归约 (primaryexpr)


状态 46

   79 primaryexpr: OP_ADD primaryexpr •

    $default  使用规则 79 以归约 (primaryexpr)


状态 47

   80 primaryexpr: OP_SUB primaryexpr •

    $default  使用规则 80 以归约 (primaryexpr)


状态 48

   81 primaryexpr: OP_NOT primaryexpr •

    $default  使用规则 81 以归约 (primaryexpr)


状态 49

   82 primaryexpr: OP_LOGNOT primaryexpr •

    $default  使用规则 82 以归约 (primaryexpr)


状态 50

   31 expr: expr • COMMA assignexpr
   77 primaryexpr: LP expr • RP

    RP     偏移，并进入状态 87
    COMMA  偏移，并进入状态 64


状态 51

   33 assignexpr: identifier OP_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 88
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 52

   34 assignexpr: identifier OP_ADD_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 89
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 53

   35 assignexpr: identifier OP_SUB_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 90
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 54

   36 assignexpr: identifier OP_MUL_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 91
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 55

   37 assignexpr: identifier OP_DIV_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 92
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 56

   38 assignexpr: identifier OP_MOD_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 93
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 57

   39 assignexpr: identifier OP_SHL_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 94
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 58

   40 assignexpr: identifier OP_SHR_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 95
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 59

   41 assignexpr: identifier OP_AND_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 96
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 60

   42 assignexpr: identifier OP_OR_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 97
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 61

   43 assignexpr: identifier OP_XOR_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 98
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 62

   78 primaryexpr: identifier LP • arguments RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    $default  使用规则 88 以归约 (arguments)

    identifier   转到状态 25
    assignexpr   转到状态 99
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40
    arguments    转到状态 100


状态 63

   12 declaration: type declarator OP_ASSIGN expr SEM •

    $default  使用规则 12 以归约 (declaration)


状态 64

   31 expr: expr COMMA • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 101
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 65

   47 logorexpr: logorexpr OP_LOGOR • logandexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    logandexpr   转到状态 102
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 66

   45 condexpr: logorexpr QUEST • expr COLON condexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    expr         转到状态 103
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 67

   49 logandexpr: logandexpr OP_LOGAND • orexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    orexpr       转到状态 104
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 68

   51 orexpr: orexpr OP_OR • xorexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    xorexpr      转到状态 105
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 69

   53 xorexpr: xorexpr OP_XOR • andexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    andexpr      转到状态 106
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 70

   55 andexpr: andexpr OP_AND • ecmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    ecmprexpr    转到状态 107
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 71

   57 ecmprexpr: ecmprexpr OP_EQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    cmprexpr     转到状态 108
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 72

   58 ecmprexpr: ecmprexpr OP_NEQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    cmprexpr     转到状态 109
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 73

   60 cmprexpr: cmprexpr OP_GT • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    shiftexpr    转到状态 110
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 74

   61 cmprexpr: cmprexpr OP_LT • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    shiftexpr    转到状态 111
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 75

   62 cmprexpr: cmprexpr OP_GTE • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    shiftexpr    转到状态 112
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 76

   63 cmprexpr: cmprexpr OP_LTE • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    shiftexpr    转到状态 113
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 77

   65 shiftexpr: shiftexpr OP_SHL • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    addexpr      转到状态 114
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 78

   66 shiftexpr: shiftexpr OP_SHR • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    addexpr      转到状态 115
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 79

   68 addexpr: addexpr OP_ADD • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    mulexpr      转到状态 116
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 80

   69 addexpr: addexpr OP_SUB • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    mulexpr      转到状态 117
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 81

   71 mulexpr: mulexpr OP_MUL • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    primaryexpr  转到状态 118
    constant     转到状态 40


状态 82

   72 mulexpr: mulexpr OP_DIV • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    primaryexpr  转到状态 119
    constant     转到状态 40


状态 83

   73 mulexpr: mulexpr OP_MOD • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    primaryexpr  转到状态 120
    constant     转到状态 40


状态 84

    5 function: type identifier LP parameters RP • compoundstmt

    LBR  偏移，并进入状态 121

    compoundstmt  转到状态 122


状态 85

    6 parameters: parameters COMMA • parameter

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    parameter  转到状态 123
    type       转到状态 44


状态 86

   10 parameter: type identifier •

    $default  使用规则 10 以归约 (parameter)


状态 87

   77 primaryexpr: LP expr RP •

    $default  使用规则 77 以归约 (primaryexpr)


状态 88

   33 assignexpr: identifier OP_ASSIGN assignexpr •

    $default  使用规则 33 以归约 (assignexpr)


状态 89

   34 assignexpr: identifier OP_ADD_ASSIGN assignexpr •

    $default  使用规则 34 以归约 (assignexpr)


状态 90

   35 assignexpr: identifier OP_SUB_ASSIGN assignexpr •

    $default  使用规则 35 以归约 (assignexpr)


状态 91

   36 assignexpr: identifier OP_MUL_ASSIGN assignexpr •

    $default  使用规则 36 以归约 (assignexpr)


状态 92

   37 assignexpr: identifier OP_DIV_ASSIGN assignexpr •

    $default  使用规则 37 以归约 (assignexpr)


状态 93

   38 assignexpr: identifier OP_MOD_ASSIGN assignexpr •

    $default  使用规则 38 以归约 (assignexpr)


状态 94

   39 assignexpr: identifier OP_SHL_ASSIGN assignexpr •

    $default  使用规则 39 以归约 (assignexpr)


状态 95

   40 assignexpr: identifier OP_SHR_ASSIGN assignexpr •

    $default  使用规则 40 以归约 (assignexpr)


状态 96

   41 assignexpr: identifier OP_AND_ASSIGN assignexpr •

    $default  使用规则 41 以归约 (assignexpr)


状态 97

   42 assignexpr: identifier OP_OR_ASSIGN assignexpr •

    $default  使用规则 42 以归约 (assignexpr)


状态 98

   43 assignexpr: identifier OP_XOR_ASSIGN assignexpr •

    $default  使用规则 43 以归约 (assignexpr)


状态 99

   87 arguments: assignexpr •

    $default  使用规则 87 以归约 (arguments)


状态 100

   78 primaryexpr: identifier LP arguments • RP
   86 arguments: arguments • COMMA assignexpr

    RP     偏移，并进入状态 124
    COMMA  偏移，并进入状态 125


状态 101

   31 expr: expr COMMA assignexpr •

    $default  使用规则 31 以归约 (expr)


状态 102

   47 logorexpr: logorexpr OP_LOGOR logandexpr •
   49 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 67

    $default  使用规则 47 以归约 (logorexpr)


状态 103

   31 expr: expr • COMMA assignexpr
   45 condexpr: logorexpr QUEST expr • COLON condexpr

    COMMA  偏移，并进入状态 64
    COLON  偏移，并进入状态 126


状态 104

   49 logandexpr: logandexpr OP_LOGAND orexpr •
   51 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 68

    $default  使用规则 49 以归约 (logandexpr)


状态 105

   51 orexpr: orexpr OP_OR xorexpr •
   53 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 69

    $default  使用规则 51 以归约 (orexpr)


状态 106

   53 xorexpr: xorexpr OP_XOR andexpr •
   55 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 70

    $default  使用规则 53 以归约 (xorexpr)


状态 107

   55 andexpr: andexpr OP_AND ecmprexpr •
   57 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   58          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 71
    OP_NEQ  偏移，并进入状态 72

    $default  使用规则 55 以归约 (andexpr)


状态 108

   57 ecmprexpr: ecmprexpr OP_EQ cmprexpr •
   60 cmprexpr: cmprexpr • OP_GT shiftexpr
   61         | cmprexpr • OP_LT shiftexpr
   62         | cmprexpr • OP_GTE shiftexpr
   63         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 73
    OP_LT   偏移，并进入状态 74
    OP_GTE  偏移，并进入状态 75
    OP_LTE  偏移，并进入状态 76

    $default  使用规则 57 以归约 (ecmprexpr)


状态 109

   58 ecmprexpr: ecmprexpr OP_NEQ cmprexpr •
   60 cmprexpr: cmprexpr • OP_GT shiftexpr
   61         | cmprexpr • OP_LT shiftexpr
   62         | cmprexpr • OP_GTE shiftexpr
   63         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 73
    OP_LT   偏移，并进入状态 74
    OP_GTE  偏移，并进入状态 75
    OP_LTE  偏移，并进入状态 76

    $default  使用规则 58 以归约 (ecmprexpr)


状态 110

   60 cmprexpr: cmprexpr OP_GT shiftexpr •
   65 shiftexpr: shiftexpr • OP_SHL addexpr
   66          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 77
    OP_SHR  偏移，并进入状态 78

    $default  使用规则 60 以归约 (cmprexpr)


状态 111

   61 cmprexpr: cmprexpr OP_LT shiftexpr •
   65 shiftexpr: shiftexpr • OP_SHL addexpr
   66          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 77
    OP_SHR  偏移，并进入状态 78

    $default  使用规则 61 以归约 (cmprexpr)


状态 112

   62 cmprexpr: cmprexpr OP_GTE shiftexpr •
   65 shiftexpr: shiftexpr • OP_SHL addexpr
   66          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 77
    OP_SHR  偏移，并进入状态 78

    $default  使用规则 62 以归约 (cmprexpr)


状态 113

   63 cmprexpr: cmprexpr OP_LTE shiftexpr •
   65 shiftexpr: shiftexpr • OP_SHL addexpr
   66          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 77
    OP_SHR  偏移，并进入状态 78

    $default  使用规则 63 以归约 (cmprexpr)


状态 114

   65 shiftexpr: shiftexpr OP_SHL addexpr •
   68 addexpr: addexpr • OP_ADD mulexpr
   69        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 79
    OP_SUB  偏移，并进入状态 80

    $default  使用规则 65 以归约 (shiftexpr)


状态 115

   66 shiftexpr: shiftexpr OP_SHR addexpr •
   68 addexpr: addexpr • OP_ADD mulexpr
   69        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 79
    OP_SUB  偏移，并进入状态 80

    $default  使用规则 66 以归约 (shiftexpr)


状态 116

   68 addexpr: addexpr OP_ADD mulexpr •
   71 mulexpr: mulexpr • OP_MUL primaryexpr
   72        | mulexpr • OP_DIV primaryexpr
   73        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 81
    OP_DIV  偏移，并进入状态 82
    OP_MOD  偏移，并进入状态 83

    $default  使用规则 68 以归约 (addexpr)


状态 117

   69 addexpr: addexpr OP_SUB mulexpr •
   71 mulexpr: mulexpr • OP_MUL primaryexpr
   72        | mulexpr • OP_DIV primaryexpr
   73        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 81
    OP_DIV  偏移，并进入状态 82
    OP_MOD  偏移，并进入状态 83

    $default  使用规则 69 以归约 (addexpr)


状态 118

   71 mulexpr: mulexpr OP_MUL primaryexpr •

    $default  使用规则 71 以归约 (mulexpr)


状态 119

   72 mulexpr: mulexpr OP_DIV primaryexpr •

    $default  使用规则 72 以归约 (mulexpr)


状态 120

   73 mulexpr: mulexpr OP_MOD primaryexpr •

    $default  使用规则 73 以归约 (mulexpr)


状态 121

   23 compoundstmt: LBR • items RBR

    $default  使用规则 25 以归约 (items)

    items  转到状态 127


状态 122

    5 function: type identifier LP parameters RP compoundstmt •

    $default  使用规则 5 以归约 (function)


状态 123

    6 parameters: parameters COMMA parameter •

    $default  使用规则 6 以归约 (parameters)


状态 124

   78 primaryexpr: identifier LP arguments RP •

    $default  使用规则 78 以归约 (primaryexpr)


状态 125

   86 arguments: arguments COMMA • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    assignexpr   转到状态 128
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 126

   45 condexpr: logorexpr QUEST expr COLON • condexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 45
    condexpr     转到状态 129
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 127

   23 compoundstmt: LBR items • RBR
   24 items: items • item

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 11
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_ADD      偏移，并进入状态 20
    OP_SUB      偏移，并进入状态 21
    OP_NOT      偏移，并进入状态 22
    OP_LOGNOT   偏移，并进入状态 23
    LP          偏移，并进入状态 24
    LBR         偏移，并进入状态 121
    RBR         偏移，并进入状态 130
    IF          偏移，并进入状态 131
    WHILE       偏移，并进入状态 132
    FOR         偏移，并进入状态 133
    RETURN      偏移，并进入状态 134

    $default  使用规则 30 以归约 (optexpr)

    declaration   转到状态 135
    type          转到状态 136
    identifier    转到状态 25
    statement     转到状态 137
    compoundstmt  转到状态 138
    item          转到状态 139
    exprstmt      转到状态 140
    optexpr       转到状态 141
    expr          转到状态 142
    assignexpr    转到状态 27
    condexpr      转到状态 28
    logorexpr     转到状态 29
    logandexpr    转到状态 30
    orexpr        转到状态 31
    xorexpr       转到状态 32
    andexpr       转到状态 33
    ecmprexpr     转到状态 34
    cmprexpr      转到状态 35
    shiftexpr     转到状态 36
    addexpr       转到状态 37
    mulexpr       转到状态 38
    primaryexpr   转到状态 39
    constant      转到状态 40
    ctrlstmt      转到状态 143
    jumpstmt      转到状态 144


状态 128

   86 arguments: arguments COMMA assignexpr •

    $default  使用规则 86 以归约 (arguments)


状态 129

   45 condexpr: logorexpr QUEST expr COLON condexpr •

    $default  使用规则 45 以归约 (condexpr)


状态 130

   23 compoundstmt: LBR items RBR •

    $default  使用规则 23 以归约 (compoundstmt)


状态 131

   89 ctrlstmt: IF • LP expr RP statement
   90         | IF • LP expr RP statement ELSE statement

    LP  偏移，并进入状态 145


状态 132

   91 ctrlstmt: WHILE • LP expr RP statement

    LP  偏移，并进入状态 146


状态 133

   92 ctrlstmt: FOR • LP inititem optexpr SEM optexpr RP statement

    LP  偏移，并进入状态 147


状态 134

   95 jumpstmt: RETURN • optexpr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    $default  使用规则 30 以归约 (optexpr)

    identifier   转到状态 25
    optexpr      转到状态 148
    expr         转到状态 142
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 135

   26 item: declaration •

    $default  使用规则 26 以归约 (item)


状态 136

   11 declaration: type • declarator SEM
   12            | type • declarator OP_ASSIGN expr SEM

    ID  偏移，并进入状态 11

    declarator  转到状态 12
    identifier  转到状态 149


状态 137

   27 item: statement •

    $default  使用规则 27 以归约 (item)


状态 138

   19 statement: compoundstmt •

    $default  使用规则 19 以归约 (statement)


状态 139

   24 items: items item •

    $default  使用规则 24 以归约 (items)


状态 140

   20 statement: exprstmt •

    $default  使用规则 20 以归约 (statement)


状态 141

   28 exprstmt: optexpr • SEM

    SEM  偏移，并进入状态 150


状态 142

   29 optexpr: expr •
   31 expr: expr • COMMA assignexpr

    COMMA  偏移，并进入状态 64

    $default  使用规则 29 以归约 (optexpr)


状态 143

   21 statement: ctrlstmt •

    $default  使用规则 21 以归约 (statement)


状态 144

   22 statement: jumpstmt •

    $default  使用规则 22 以归约 (statement)


状态 145

   89 ctrlstmt: IF LP • expr RP statement
   90         | IF LP • expr RP statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    expr         转到状态 151
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 146

   91 ctrlstmt: WHILE LP • expr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    identifier   转到状态 25
    expr         转到状态 152
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 147

   92 ctrlstmt: FOR LP • inititem optexpr SEM optexpr RP statement

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 11
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_ADD      偏移，并进入状态 20
    OP_SUB      偏移，并进入状态 21
    OP_NOT      偏移，并进入状态 22
    OP_LOGNOT   偏移，并进入状态 23
    LP          偏移，并进入状态 24

    $default  使用规则 30 以归约 (optexpr)

    declaration  转到状态 153
    type         转到状态 136
    identifier   转到状态 25
    exprstmt     转到状态 154
    optexpr      转到状态 141
    expr         转到状态 142
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40
    inititem     转到状态 155


状态 148

   95 jumpstmt: RETURN optexpr • SEM

    SEM  偏移，并进入状态 156


状态 149

   13 declarator: identifier •

    $default  使用规则 13 以归约 (declarator)


状态 150

   28 exprstmt: optexpr SEM •

    $default  使用规则 28 以归约 (exprstmt)


状态 151

   31 expr: expr • COMMA assignexpr
   89 ctrlstmt: IF LP expr • RP statement
   90         | IF LP expr • RP statement ELSE statement

    RP     偏移，并进入状态 157
    COMMA  偏移，并进入状态 64


状态 152

   31 expr: expr • COMMA assignexpr
   91 ctrlstmt: WHILE LP expr • RP statement

    RP     偏移，并进入状态 158
    COMMA  偏移，并进入状态 64


状态 153

   94 inititem: declaration •

    $default  使用规则 94 以归约 (inititem)


状态 154

   93 inititem: exprstmt •

    $default  使用规则 93 以归约 (inititem)


状态 155

   92 ctrlstmt: FOR LP inititem • optexpr SEM optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    $default  使用规则 30 以归约 (optexpr)

    identifier   转到状态 25
    optexpr      转到状态 159
    expr         转到状态 142
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 156

   95 jumpstmt: RETURN optexpr SEM •

    $default  使用规则 95 以归约 (jumpstmt)


状态 157

   89 ctrlstmt: IF LP expr RP • statement
   90         | IF LP expr RP • statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24
    LBR        偏移，并进入状态 121
    IF         偏移，并进入状态 131
    WHILE      偏移，并进入状态 132
    FOR        偏移，并进入状态 133
    RETURN     偏移，并进入状态 134

    $default  使用规则 30 以归约 (optexpr)

    identifier    转到状态 25
    statement     转到状态 160
    compoundstmt  转到状态 138
    exprstmt      转到状态 140
    optexpr       转到状态 141
    expr          转到状态 142
    assignexpr    转到状态 27
    condexpr      转到状态 28
    logorexpr     转到状态 29
    logandexpr    转到状态 30
    orexpr        转到状态 31
    xorexpr       转到状态 32
    andexpr       转到状态 33
    ecmprexpr     转到状态 34
    cmprexpr      转到状态 35
    shiftexpr     转到状态 36
    addexpr       转到状态 37
    mulexpr       转到状态 38
    primaryexpr   转到状态 39
    constant      转到状态 40
    ctrlstmt      转到状态 143
    jumpstmt      转到状态 144


状态 158

   91 ctrlstmt: WHILE LP expr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24
    LBR        偏移，并进入状态 121
    IF         偏移，并进入状态 131
    WHILE      偏移，并进入状态 132
    FOR        偏移，并进入状态 133
    RETURN     偏移，并进入状态 134

    $default  使用规则 30 以归约 (optexpr)

    identifier    转到状态 25
    statement     转到状态 161
    compoundstmt  转到状态 138
    exprstmt      转到状态 140
    optexpr       转到状态 141
    expr          转到状态 142
    assignexpr    转到状态 27
    condexpr      转到状态 28
    logorexpr     转到状态 29
    logandexpr    转到状态 30
    orexpr        转到状态 31
    xorexpr       转到状态 32
    andexpr       转到状态 33
    ecmprexpr     转到状态 34
    cmprexpr      转到状态 35
    shiftexpr     转到状态 36
    addexpr       转到状态 37
    mulexpr       转到状态 38
    primaryexpr   转到状态 39
    constant      转到状态 40
    ctrlstmt      转到状态 143
    jumpstmt      转到状态 144


状态 159

   92 ctrlstmt: FOR LP inititem optexpr • SEM optexpr RP statement

    SEM  偏移，并进入状态 162


状态 160

   89 ctrlstmt: IF LP expr RP statement •
   90         | IF LP expr RP statement • ELSE statement

    ELSE  偏移，并进入状态 163

    $default  使用规则 89 以归约 (ctrlstmt)


状态 161

   91 ctrlstmt: WHILE LP expr RP statement •

    $default  使用规则 91 以归约 (ctrlstmt)


状态 162

   92 ctrlstmt: FOR LP inititem optexpr SEM • optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24

    $default  使用规则 30 以归约 (optexpr)

    identifier   转到状态 25
    optexpr      转到状态 164
    expr         转到状态 142
    assignexpr   转到状态 27
    condexpr     转到状态 28
    logorexpr    转到状态 29
    logandexpr   转到状态 30
    orexpr       转到状态 31
    xorexpr      转到状态 32
    andexpr      转到状态 33
    ecmprexpr    转到状态 34
    cmprexpr     转到状态 35
    shiftexpr    转到状态 36
    addexpr      转到状态 37
    mulexpr      转到状态 38
    primaryexpr  转到状态 39
    constant     转到状态 40


状态 163

   90 ctrlstmt: IF LP expr RP statement ELSE • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24
    LBR        偏移，并进入状态 121
    IF         偏移，并进入状态 131
    WHILE      偏移，并进入状态 132
    FOR        偏移，并进入状态 133
    RETURN     偏移，并进入状态 134

    $default  使用规则 30 以归约 (optexpr)

    identifier    转到状态 25
    statement     转到状态 165
    compoundstmt  转到状态 138
    exprstmt      转到状态 140
    optexpr       转到状态 141
    expr          转到状态 142
    assignexpr    转到状态 27
    condexpr      转到状态 28
    logorexpr     转到状态 29
    logandexpr    转到状态 30
    orexpr        转到状态 31
    xorexpr       转到状态 32
    andexpr       转到状态 33
    ecmprexpr     转到状态 34
    cmprexpr      转到状态 35
    shiftexpr     转到状态 36
    addexpr       转到状态 37
    mulexpr       转到状态 38
    primaryexpr   转到状态 39
    constant      转到状态 40
    ctrlstmt      转到状态 143
    jumpstmt      转到状态 144


状态 164

   92 ctrlstmt: FOR LP inititem optexpr SEM optexpr • RP statement

    RP  偏移，并进入状态 166


状态 165

   90 ctrlstmt: IF LP expr RP statement ELSE statement •

    $default  使用规则 90 以归约 (ctrlstmt)


状态 166

   92 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 11
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    OP_LOGNOT  偏移，并进入状态 23
    LP         偏移，并进入状态 24
    LBR        偏移，并进入状态 121
    IF         偏移，并进入状态 131
    WHILE      偏移，并进入状态 132
    FOR        偏移，并进入状态 133
    RETURN     偏移，并进入状态 134

    $default  使用规则 30 以归约 (optexpr)

    identifier    转到状态 25
    statement     转到状态 167
    compoundstmt  转到状态 138
    exprstmt      转到状态 140
    optexpr       转到状态 141
    expr          转到状态 142
    assignexpr    转到状态 27
    condexpr      转到状态 28
    logorexpr     转到状态 29
    logandexpr    转到状态 30
    orexpr        转到状态 31
    xorexpr       转到状态 32
    andexpr       转到状态 33
    ecmprexpr     转到状态 34
    cmprexpr      转到状态 35
    shiftexpr     转到状态 36
    addexpr       转到状态 37
    mulexpr       转到状态 38
    primaryexpr   转到状态 39
    constant      转到状态 40
    ctrlstmt      转到状态 143
    jumpstmt      转到状态 144


状态 167

   92 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP statement •

    $default  使用规则 92 以归约 (ctrlstmt)
