语法

    0 $accept: program $end

    1 program: program externdef
    2        | ε

    3 externdef: function
    4          | declaration

    5 function: declarator LP parameters RP compoundstmt

    6 parameters: parameters COMMA declarator
    7           | declarator
    8           | TYPE_VOID
    9           | ε

   10 declaration: declarator SEM
   11            | declarator OP_ASSIGN expr SEM

   12 declarator: type identifier

   13 type: TYPE_INT
   14     | TYPE_FLOAT
   15     | TYPE_BOOL
   16     | TYPE_VOID

   17 identifier: ID

   18 statement: compoundstmt
   19          | exprstmt
   20          | ctrlstmt
   21          | jumpstmt

   22 compoundstmt: LBR items RBR

   23 items: items item
   24      | ε

   25 item: declaration
   26     | statement

   27 exprstmt: optexpr SEM

   28 optexpr: expr
   29        | ε

   30 expr: identifier OP_ASSIGN expr
   31     | logorexpr

   32 logorexpr: logorexpr OP_LOGOR logandexpr
   33          | logandexpr

   34 logandexpr: logandexpr OP_LOGAND orexpr
   35           | orexpr

   36 orexpr: orexpr OP_OR xorexpr
   37       | xorexpr

   38 xorexpr: xorexpr OP_XOR andexpr
   39        | andexpr

   40 andexpr: andexpr OP_AND ecmprexpr
   41        | ecmprexpr

   42 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   43          | ecmprexpr OP_NEQ cmprexpr
   44          | cmprexpr

   45 cmprexpr: cmprexpr OP_GT shiftexpr
   46         | cmprexpr OP_LT shiftexpr
   47         | cmprexpr OP_GTE shiftexpr
   48         | cmprexpr OP_LTE shiftexpr
   49         | shiftexpr

   50 shiftexpr: shiftexpr OP_SHL addexpr
   51          | shiftexpr OP_SHR addexpr
   52          | addexpr

   53 addexpr: addexpr OP_ADD mulexpr
   54        | addexpr OP_SUB mulexpr
   55        | mulexpr

   56 mulexpr: mulexpr OP_MUL primaryexpr
   57        | mulexpr OP_DIV primaryexpr
   58        | mulexpr OP_MOD primaryexpr
   59        | primaryexpr

   60 primaryexpr: identifier
   61            | constant
   62            | LP expr RP
   63            | identifier LP arguments RP
   64            | OP_SUB primaryexpr
   65            | OP_NOT primaryexpr

   66 constant: NUM_INT
   67         | NUM_FLOAT
   68         | NUM_BOOL

   69 arguments: arguments COMMA expr
   70          | expr
   71          | ε

   72 ctrlstmt: IF LP expr RP statement
   73         | IF LP expr RP statement ELSE statement
   74         | WHILE LP expr RP statement
   75         | FOR LP inititem optexpr SEM optexpr RP statement

   76 inititem: exprstmt
   77         | declaration

   78 jumpstmt: RETURN optexpr SEM


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    NUM_INT <intNum> (258) 66
    NUM_FLOAT <floatNum> (259) 67
    NUM_BOOL <boolNum> (260) 68
    ID <str> (261) 17
    TYPE_INT (262) 13
    TYPE_FLOAT (263) 14
    TYPE_BOOL (264) 15
    TYPE_VOID (265) 8 16
    OP_ADD (266) 53
    OP_SUB (267) 54 64
    OP_MUL (268) 56
    OP_DIV (269) 57
    OP_MOD (270) 58
    OP_SHL (271) 50
    OP_SHR (272) 51
    OP_GT (273) 45
    OP_LT (274) 46
    OP_GTE (275) 47
    OP_LTE (276) 48
    OP_EQ (277) 42
    OP_NEQ (278) 43
    OP_AND (279) 40
    OP_XOR (280) 38
    OP_OR (281) 36
    OP_NOT (282) 65
    OP_LOGAND (283) 34
    OP_LOGOR (284) 32
    OP_ASSIGN (285) 11 30
    LP (286) 5 62 63 72 73 74 75
    RP (287) 5 62 63 72 73 74 75
    LBR (288) 22
    RBR (289) 22
    SEM (290) 10 11 27 75 78
    COMMA (291) 6 69
    IF (292) 72 73
    ELSE (293) 73
    WHILE (294) 74
    FOR (295) 75
    RETURN (296) 78
    IFX (297)


非终结语词，附有它们出现处的规则

    $accept (43)
        on left: 0
    program <unit> (44)
        on left: 1 2
        on right: 0 1
    externdef <node> (45)
        on left: 3 4
        on right: 1
    function <node> (46)
        on left: 5
        on right: 3
    parameters <parameters> (47)
        on left: 6 7 8 9
        on right: 5 6
    declaration <node> (48)
        on left: 10 11
        on right: 4 25 77
    declarator <declarator> (49)
        on left: 12
        on right: 5 6 7 10 11
    type <type> (50)
        on left: 13 14 15 16
        on right: 12
    identifier <identifier> (51)
        on left: 17
        on right: 12 30 60 63
    statement <statement> (52)
        on left: 18 19 20 21
        on right: 26 72 73 74 75
    compoundstmt <compound> (53)
        on left: 22
        on right: 5 18
    items <compound> (54)
        on left: 23 24
        on right: 22 23
    item <node> (55)
        on left: 25 26
        on right: 23
    exprstmt <statement> (56)
        on left: 27
        on right: 19 76
    optexpr <expression> (57)
        on left: 28 29
        on right: 27 75 78
    expr <expression> (58)
        on left: 30 31
        on right: 11 28 30 62 69 70 72 73 74
    logorexpr <expression> (59)
        on left: 32 33
        on right: 31 32
    logandexpr <expression> (60)
        on left: 34 35
        on right: 32 33 34
    orexpr <expression> (61)
        on left: 36 37
        on right: 34 35 36
    xorexpr <expression> (62)
        on left: 38 39
        on right: 36 37 38
    andexpr <expression> (63)
        on left: 40 41
        on right: 38 39 40
    ecmprexpr <expression> (64)
        on left: 42 43 44
        on right: 40 41 42 43
    cmprexpr <expression> (65)
        on left: 45 46 47 48 49
        on right: 42 43 44 45 46 47 48
    shiftexpr <expression> (66)
        on left: 50 51 52
        on right: 45 46 47 48 49 50 51
    addexpr <expression> (67)
        on left: 53 54 55
        on right: 50 51 52 53 54
    mulexpr <expression> (68)
        on left: 56 57 58 59
        on right: 53 54 55 56 57 58
    primaryexpr <expression> (69)
        on left: 60 61 62 63 64 65
        on right: 56 57 58 59 64 65
    constant <expression> (70)
        on left: 66 67 68
        on right: 61
    arguments <arguments> (71)
        on left: 69 70 71
        on right: 63 69
    ctrlstmt <statement> (72)
        on left: 72 73 74 75
        on right: 20
    inititem <node> (73)
        on left: 76 77
        on right: 75
    jumpstmt <statement> (74)
        on left: 78
        on right: 21


状态 0

    0 $accept: • program $end

    $default  使用规则 2 以归约 (program)

    program  转到状态 1


状态 1

    0 $accept: program • $end
    1 program: program • externdef

    $end        偏移，并进入状态 2
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    externdef    转到状态 7
    function     转到状态 8
    declaration  转到状态 9
    declarator   转到状态 10
    type         转到状态 11


状态 2

    0 $accept: program $end •

    $default  接受


状态 3

   13 type: TYPE_INT •

    $default  使用规则 13 以归约 (type)


状态 4

   14 type: TYPE_FLOAT •

    $default  使用规则 14 以归约 (type)


状态 5

   15 type: TYPE_BOOL •

    $default  使用规则 15 以归约 (type)


状态 6

   16 type: TYPE_VOID •

    $default  使用规则 16 以归约 (type)


状态 7

    1 program: program externdef •

    $default  使用规则 1 以归约 (program)


状态 8

    3 externdef: function •

    $default  使用规则 3 以归约 (externdef)


状态 9

    4 externdef: declaration •

    $default  使用规则 4 以归约 (externdef)


状态 10

    5 function: declarator • LP parameters RP compoundstmt
   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 12
    LP         偏移，并进入状态 13
    SEM        偏移，并进入状态 14


状态 11

   12 declarator: type • identifier

    ID  偏移，并进入状态 15

    identifier  转到状态 16


状态 12

   11 declaration: declarator OP_ASSIGN • expr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 24
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 13

    5 function: declarator LP • parameters RP compoundstmt

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 37

    $default  使用规则 9 以归约 (parameters)

    parameters  转到状态 38
    declarator  转到状态 39
    type        转到状态 11


状态 14

   10 declaration: declarator SEM •

    $default  使用规则 10 以归约 (declaration)


状态 15

   17 identifier: ID •

    $default  使用规则 17 以归约 (identifier)


状态 16

   12 declarator: type identifier •

    $default  使用规则 12 以归约 (declarator)


状态 17

   66 constant: NUM_INT •

    $default  使用规则 66 以归约 (constant)


状态 18

   67 constant: NUM_FLOAT •

    $default  使用规则 67 以归约 (constant)


状态 19

   68 constant: NUM_BOOL •

    $default  使用规则 68 以归约 (constant)


状态 20

   64 primaryexpr: OP_SUB • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    primaryexpr  转到状态 41
    constant     转到状态 36


状态 21

   65 primaryexpr: OP_NOT • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    primaryexpr  转到状态 42
    constant     转到状态 36


状态 22

   62 primaryexpr: LP • expr RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 43
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 23

   30 expr: identifier • OP_ASSIGN expr
   60 primaryexpr: identifier •
   63            | identifier • LP arguments RP

    OP_ASSIGN  偏移，并进入状态 44
    LP         偏移，并进入状态 45

    $default  使用规则 60 以归约 (primaryexpr)


状态 24

   11 declaration: declarator OP_ASSIGN expr • SEM

    SEM  偏移，并进入状态 46


状态 25

   31 expr: logorexpr •
   32 logorexpr: logorexpr • OP_LOGOR logandexpr

    OP_LOGOR  偏移，并进入状态 47

    $default  使用规则 31 以归约 (expr)


状态 26

   33 logorexpr: logandexpr •
   34 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 48

    $default  使用规则 33 以归约 (logorexpr)


状态 27

   35 logandexpr: orexpr •
   36 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 49

    $default  使用规则 35 以归约 (logandexpr)


状态 28

   37 orexpr: xorexpr •
   38 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 50

    $default  使用规则 37 以归约 (orexpr)


状态 29

   39 xorexpr: andexpr •
   40 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 51

    $default  使用规则 39 以归约 (xorexpr)


状态 30

   41 andexpr: ecmprexpr •
   42 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   43          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 52
    OP_NEQ  偏移，并进入状态 53

    $default  使用规则 41 以归约 (andexpr)


状态 31

   44 ecmprexpr: cmprexpr •
   45 cmprexpr: cmprexpr • OP_GT shiftexpr
   46         | cmprexpr • OP_LT shiftexpr
   47         | cmprexpr • OP_GTE shiftexpr
   48         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 54
    OP_LT   偏移，并进入状态 55
    OP_GTE  偏移，并进入状态 56
    OP_LTE  偏移，并进入状态 57

    $default  使用规则 44 以归约 (ecmprexpr)


状态 32

   49 cmprexpr: shiftexpr •
   50 shiftexpr: shiftexpr • OP_SHL addexpr
   51          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 58
    OP_SHR  偏移，并进入状态 59

    $default  使用规则 49 以归约 (cmprexpr)


状态 33

   52 shiftexpr: addexpr •
   53 addexpr: addexpr • OP_ADD mulexpr
   54        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 60
    OP_SUB  偏移，并进入状态 61

    $default  使用规则 52 以归约 (shiftexpr)


状态 34

   55 addexpr: mulexpr •
   56 mulexpr: mulexpr • OP_MUL primaryexpr
   57        | mulexpr • OP_DIV primaryexpr
   58        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 62
    OP_DIV  偏移，并进入状态 63
    OP_MOD  偏移，并进入状态 64

    $default  使用规则 55 以归约 (addexpr)


状态 35

   59 mulexpr: primaryexpr •

    $default  使用规则 59 以归约 (mulexpr)


状态 36

   61 primaryexpr: constant •

    $default  使用规则 61 以归约 (primaryexpr)


状态 37

    8 parameters: TYPE_VOID •
   16 type: TYPE_VOID •

    ID        使用规则 16 以归约 (type)
    $default  使用规则 8 以归约 (parameters)


状态 38

    5 function: declarator LP parameters • RP compoundstmt
    6 parameters: parameters • COMMA declarator

    RP     偏移，并进入状态 65
    COMMA  偏移，并进入状态 66


状态 39

    7 parameters: declarator •

    $default  使用规则 7 以归约 (parameters)


状态 40

   60 primaryexpr: identifier •
   63            | identifier • LP arguments RP

    LP  偏移，并进入状态 45

    $default  使用规则 60 以归约 (primaryexpr)


状态 41

   64 primaryexpr: OP_SUB primaryexpr •

    $default  使用规则 64 以归约 (primaryexpr)


状态 42

   65 primaryexpr: OP_NOT primaryexpr •

    $default  使用规则 65 以归约 (primaryexpr)


状态 43

   62 primaryexpr: LP expr • RP

    RP  偏移，并进入状态 67


状态 44

   30 expr: identifier OP_ASSIGN • expr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 68
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 45

   63 primaryexpr: identifier LP • arguments RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 71 以归约 (arguments)

    identifier   转到状态 23
    expr         转到状态 69
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36
    arguments    转到状态 70


状态 46

   11 declaration: declarator OP_ASSIGN expr SEM •

    $default  使用规则 11 以归约 (declaration)


状态 47

   32 logorexpr: logorexpr OP_LOGOR • logandexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    logandexpr   转到状态 71
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 48

   34 logandexpr: logandexpr OP_LOGAND • orexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    orexpr       转到状态 72
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 49

   36 orexpr: orexpr OP_OR • xorexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    xorexpr      转到状态 73
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 50

   38 xorexpr: xorexpr OP_XOR • andexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    andexpr      转到状态 74
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 51

   40 andexpr: andexpr OP_AND • ecmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    ecmprexpr    转到状态 75
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 52

   42 ecmprexpr: ecmprexpr OP_EQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    cmprexpr     转到状态 76
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 53

   43 ecmprexpr: ecmprexpr OP_NEQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    cmprexpr     转到状态 77
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 54

   45 cmprexpr: cmprexpr OP_GT • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    shiftexpr    转到状态 78
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 55

   46 cmprexpr: cmprexpr OP_LT • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    shiftexpr    转到状态 79
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 56

   47 cmprexpr: cmprexpr OP_GTE • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    shiftexpr    转到状态 80
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 57

   48 cmprexpr: cmprexpr OP_LTE • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    shiftexpr    转到状态 81
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 58

   50 shiftexpr: shiftexpr OP_SHL • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    addexpr      转到状态 82
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 59

   51 shiftexpr: shiftexpr OP_SHR • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    addexpr      转到状态 83
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 60

   53 addexpr: addexpr OP_ADD • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    mulexpr      转到状态 84
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 61

   54 addexpr: addexpr OP_SUB • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    mulexpr      转到状态 85
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 62

   56 mulexpr: mulexpr OP_MUL • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    primaryexpr  转到状态 86
    constant     转到状态 36


状态 63

   57 mulexpr: mulexpr OP_DIV • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    primaryexpr  转到状态 87
    constant     转到状态 36


状态 64

   58 mulexpr: mulexpr OP_MOD • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 40
    primaryexpr  转到状态 88
    constant     转到状态 36


状态 65

    5 function: declarator LP parameters RP • compoundstmt

    LBR  偏移，并进入状态 89

    compoundstmt  转到状态 90


状态 66

    6 parameters: parameters COMMA • declarator

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    declarator  转到状态 91
    type        转到状态 11


状态 67

   62 primaryexpr: LP expr RP •

    $default  使用规则 62 以归约 (primaryexpr)


状态 68

   30 expr: identifier OP_ASSIGN expr •

    $default  使用规则 30 以归约 (expr)


状态 69

   70 arguments: expr •

    $default  使用规则 70 以归约 (arguments)


状态 70

   63 primaryexpr: identifier LP arguments • RP
   69 arguments: arguments • COMMA expr

    RP     偏移，并进入状态 92
    COMMA  偏移，并进入状态 93


状态 71

   32 logorexpr: logorexpr OP_LOGOR logandexpr •
   34 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 48

    $default  使用规则 32 以归约 (logorexpr)


状态 72

   34 logandexpr: logandexpr OP_LOGAND orexpr •
   36 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 49

    $default  使用规则 34 以归约 (logandexpr)


状态 73

   36 orexpr: orexpr OP_OR xorexpr •
   38 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 50

    $default  使用规则 36 以归约 (orexpr)


状态 74

   38 xorexpr: xorexpr OP_XOR andexpr •
   40 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 51

    $default  使用规则 38 以归约 (xorexpr)


状态 75

   40 andexpr: andexpr OP_AND ecmprexpr •
   42 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   43          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 52
    OP_NEQ  偏移，并进入状态 53

    $default  使用规则 40 以归约 (andexpr)


状态 76

   42 ecmprexpr: ecmprexpr OP_EQ cmprexpr •
   45 cmprexpr: cmprexpr • OP_GT shiftexpr
   46         | cmprexpr • OP_LT shiftexpr
   47         | cmprexpr • OP_GTE shiftexpr
   48         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 54
    OP_LT   偏移，并进入状态 55
    OP_GTE  偏移，并进入状态 56
    OP_LTE  偏移，并进入状态 57

    $default  使用规则 42 以归约 (ecmprexpr)


状态 77

   43 ecmprexpr: ecmprexpr OP_NEQ cmprexpr •
   45 cmprexpr: cmprexpr • OP_GT shiftexpr
   46         | cmprexpr • OP_LT shiftexpr
   47         | cmprexpr • OP_GTE shiftexpr
   48         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 54
    OP_LT   偏移，并进入状态 55
    OP_GTE  偏移，并进入状态 56
    OP_LTE  偏移，并进入状态 57

    $default  使用规则 43 以归约 (ecmprexpr)


状态 78

   45 cmprexpr: cmprexpr OP_GT shiftexpr •
   50 shiftexpr: shiftexpr • OP_SHL addexpr
   51          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 58
    OP_SHR  偏移，并进入状态 59

    $default  使用规则 45 以归约 (cmprexpr)


状态 79

   46 cmprexpr: cmprexpr OP_LT shiftexpr •
   50 shiftexpr: shiftexpr • OP_SHL addexpr
   51          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 58
    OP_SHR  偏移，并进入状态 59

    $default  使用规则 46 以归约 (cmprexpr)


状态 80

   47 cmprexpr: cmprexpr OP_GTE shiftexpr •
   50 shiftexpr: shiftexpr • OP_SHL addexpr
   51          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 58
    OP_SHR  偏移，并进入状态 59

    $default  使用规则 47 以归约 (cmprexpr)


状态 81

   48 cmprexpr: cmprexpr OP_LTE shiftexpr •
   50 shiftexpr: shiftexpr • OP_SHL addexpr
   51          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 58
    OP_SHR  偏移，并进入状态 59

    $default  使用规则 48 以归约 (cmprexpr)


状态 82

   50 shiftexpr: shiftexpr OP_SHL addexpr •
   53 addexpr: addexpr • OP_ADD mulexpr
   54        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 60
    OP_SUB  偏移，并进入状态 61

    $default  使用规则 50 以归约 (shiftexpr)


状态 83

   51 shiftexpr: shiftexpr OP_SHR addexpr •
   53 addexpr: addexpr • OP_ADD mulexpr
   54        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 60
    OP_SUB  偏移，并进入状态 61

    $default  使用规则 51 以归约 (shiftexpr)


状态 84

   53 addexpr: addexpr OP_ADD mulexpr •
   56 mulexpr: mulexpr • OP_MUL primaryexpr
   57        | mulexpr • OP_DIV primaryexpr
   58        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 62
    OP_DIV  偏移，并进入状态 63
    OP_MOD  偏移，并进入状态 64

    $default  使用规则 53 以归约 (addexpr)


状态 85

   54 addexpr: addexpr OP_SUB mulexpr •
   56 mulexpr: mulexpr • OP_MUL primaryexpr
   57        | mulexpr • OP_DIV primaryexpr
   58        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 62
    OP_DIV  偏移，并进入状态 63
    OP_MOD  偏移，并进入状态 64

    $default  使用规则 54 以归约 (addexpr)


状态 86

   56 mulexpr: mulexpr OP_MUL primaryexpr •

    $default  使用规则 56 以归约 (mulexpr)


状态 87

   57 mulexpr: mulexpr OP_DIV primaryexpr •

    $default  使用规则 57 以归约 (mulexpr)


状态 88

   58 mulexpr: mulexpr OP_MOD primaryexpr •

    $default  使用规则 58 以归约 (mulexpr)


状态 89

   22 compoundstmt: LBR • items RBR

    $default  使用规则 24 以归约 (items)

    items  转到状态 94


状态 90

    5 function: declarator LP parameters RP compoundstmt •

    $default  使用规则 5 以归约 (function)


状态 91

    6 parameters: parameters COMMA declarator •

    $default  使用规则 6 以归约 (parameters)


状态 92

   63 primaryexpr: identifier LP arguments RP •

    $default  使用规则 63 以归约 (primaryexpr)


状态 93

   69 arguments: arguments COMMA • expr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 95
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 94

   22 compoundstmt: LBR items • RBR
   23 items: items • item

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 15
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_SUB      偏移，并进入状态 20
    OP_NOT      偏移，并进入状态 21
    LP          偏移，并进入状态 22
    LBR         偏移，并进入状态 89
    RBR         偏移，并进入状态 96
    IF          偏移，并进入状态 97
    WHILE       偏移，并进入状态 98
    FOR         偏移，并进入状态 99
    RETURN      偏移，并进入状态 100

    $default  使用规则 29 以归约 (optexpr)

    declaration   转到状态 101
    declarator    转到状态 102
    type          转到状态 11
    identifier    转到状态 23
    statement     转到状态 103
    compoundstmt  转到状态 104
    item          转到状态 105
    exprstmt      转到状态 106
    optexpr       转到状态 107
    expr          转到状态 108
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    shiftexpr     转到状态 32
    addexpr       转到状态 33
    mulexpr       转到状态 34
    primaryexpr   转到状态 35
    constant      转到状态 36
    ctrlstmt      转到状态 109
    jumpstmt      转到状态 110


状态 95

   69 arguments: arguments COMMA expr •

    $default  使用规则 69 以归约 (arguments)


状态 96

   22 compoundstmt: LBR items RBR •

    $default  使用规则 22 以归约 (compoundstmt)


状态 97

   72 ctrlstmt: IF • LP expr RP statement
   73         | IF • LP expr RP statement ELSE statement

    LP  偏移，并进入状态 111


状态 98

   74 ctrlstmt: WHILE • LP expr RP statement

    LP  偏移，并进入状态 112


状态 99

   75 ctrlstmt: FOR • LP inititem optexpr SEM optexpr RP statement

    LP  偏移，并进入状态 113


状态 100

   78 jumpstmt: RETURN • optexpr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 23
    optexpr      转到状态 114
    expr         转到状态 108
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 101

   25 item: declaration •

    $default  使用规则 25 以归约 (item)


状态 102

   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 12
    SEM        偏移，并进入状态 14


状态 103

   26 item: statement •

    $default  使用规则 26 以归约 (item)


状态 104

   18 statement: compoundstmt •

    $default  使用规则 18 以归约 (statement)


状态 105

   23 items: items item •

    $default  使用规则 23 以归约 (items)


状态 106

   19 statement: exprstmt •

    $default  使用规则 19 以归约 (statement)


状态 107

   27 exprstmt: optexpr • SEM

    SEM  偏移，并进入状态 115


状态 108

   28 optexpr: expr •

    $default  使用规则 28 以归约 (optexpr)


状态 109

   20 statement: ctrlstmt •

    $default  使用规则 20 以归约 (statement)


状态 110

   21 statement: jumpstmt •

    $default  使用规则 21 以归约 (statement)


状态 111

   72 ctrlstmt: IF LP • expr RP statement
   73         | IF LP • expr RP statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 116
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 112

   74 ctrlstmt: WHILE LP • expr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 117
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 113

   75 ctrlstmt: FOR LP • inititem optexpr SEM optexpr RP statement

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 15
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_SUB      偏移，并进入状态 20
    OP_NOT      偏移，并进入状态 21
    LP          偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    declaration  转到状态 118
    declarator   转到状态 102
    type         转到状态 11
    identifier   转到状态 23
    exprstmt     转到状态 119
    optexpr      转到状态 107
    expr         转到状态 108
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36
    inititem     转到状态 120


状态 114

   78 jumpstmt: RETURN optexpr • SEM

    SEM  偏移，并进入状态 121


状态 115

   27 exprstmt: optexpr SEM •

    $default  使用规则 27 以归约 (exprstmt)


状态 116

   72 ctrlstmt: IF LP expr • RP statement
   73         | IF LP expr • RP statement ELSE statement

    RP  偏移，并进入状态 122


状态 117

   74 ctrlstmt: WHILE LP expr • RP statement

    RP  偏移，并进入状态 123


状态 118

   77 inititem: declaration •

    $default  使用规则 77 以归约 (inititem)


状态 119

   76 inititem: exprstmt •

    $default  使用规则 76 以归约 (inititem)


状态 120

   75 ctrlstmt: FOR LP inititem • optexpr SEM optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 23
    optexpr      转到状态 124
    expr         转到状态 108
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 121

   78 jumpstmt: RETURN optexpr SEM •

    $default  使用规则 78 以归约 (jumpstmt)


状态 122

   72 ctrlstmt: IF LP expr RP • statement
   73         | IF LP expr RP • statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 89
    IF         偏移，并进入状态 97
    WHILE      偏移，并进入状态 98
    FOR        偏移，并进入状态 99
    RETURN     偏移，并进入状态 100

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 125
    compoundstmt  转到状态 104
    exprstmt      转到状态 106
    optexpr       转到状态 107
    expr          转到状态 108
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    shiftexpr     转到状态 32
    addexpr       转到状态 33
    mulexpr       转到状态 34
    primaryexpr   转到状态 35
    constant      转到状态 36
    ctrlstmt      转到状态 109
    jumpstmt      转到状态 110


状态 123

   74 ctrlstmt: WHILE LP expr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 89
    IF         偏移，并进入状态 97
    WHILE      偏移，并进入状态 98
    FOR        偏移，并进入状态 99
    RETURN     偏移，并进入状态 100

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 126
    compoundstmt  转到状态 104
    exprstmt      转到状态 106
    optexpr       转到状态 107
    expr          转到状态 108
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    shiftexpr     转到状态 32
    addexpr       转到状态 33
    mulexpr       转到状态 34
    primaryexpr   转到状态 35
    constant      转到状态 36
    ctrlstmt      转到状态 109
    jumpstmt      转到状态 110


状态 124

   75 ctrlstmt: FOR LP inititem optexpr • SEM optexpr RP statement

    SEM  偏移，并进入状态 127


状态 125

   72 ctrlstmt: IF LP expr RP statement •
   73         | IF LP expr RP statement • ELSE statement

    ELSE  偏移，并进入状态 128

    $default  使用规则 72 以归约 (ctrlstmt)


状态 126

   74 ctrlstmt: WHILE LP expr RP statement •

    $default  使用规则 74 以归约 (ctrlstmt)


状态 127

   75 ctrlstmt: FOR LP inititem optexpr SEM • optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 23
    optexpr      转到状态 129
    expr         转到状态 108
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    shiftexpr    转到状态 32
    addexpr      转到状态 33
    mulexpr      转到状态 34
    primaryexpr  转到状态 35
    constant     转到状态 36


状态 128

   73 ctrlstmt: IF LP expr RP statement ELSE • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 89
    IF         偏移，并进入状态 97
    WHILE      偏移，并进入状态 98
    FOR        偏移，并进入状态 99
    RETURN     偏移，并进入状态 100

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 130
    compoundstmt  转到状态 104
    exprstmt      转到状态 106
    optexpr       转到状态 107
    expr          转到状态 108
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    shiftexpr     转到状态 32
    addexpr       转到状态 33
    mulexpr       转到状态 34
    primaryexpr   转到状态 35
    constant      转到状态 36
    ctrlstmt      转到状态 109
    jumpstmt      转到状态 110


状态 129

   75 ctrlstmt: FOR LP inititem optexpr SEM optexpr • RP statement

    RP  偏移，并进入状态 131


状态 130

   73 ctrlstmt: IF LP expr RP statement ELSE statement •

    $default  使用规则 73 以归约 (ctrlstmt)


状态 131

   75 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 89
    IF         偏移，并进入状态 97
    WHILE      偏移，并进入状态 98
    FOR        偏移，并进入状态 99
    RETURN     偏移，并进入状态 100

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 132
    compoundstmt  转到状态 104
    exprstmt      转到状态 106
    optexpr       转到状态 107
    expr          转到状态 108
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    shiftexpr     转到状态 32
    addexpr       转到状态 33
    mulexpr       转到状态 34
    primaryexpr   转到状态 35
    constant      转到状态 36
    ctrlstmt      转到状态 109
    jumpstmt      转到状态 110


状态 132

   75 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP statement •

    $default  使用规则 75 以归约 (ctrlstmt)
