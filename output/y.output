语法

    0 $accept: program $end

    1 program: program externdef
    2        | ε

    3 externdef: function
    4          | declaration

    5 function: declarator LP parameters RP compoundstmt

    6 parameters: parameters COMMA declarator
    7           | declarator
    8           | TYPE_VOID
    9           | ε

   10 declaration: declarator SEM
   11            | declarator OP_ASSIGN expr SEM

   12 declarator: type identifier

   13 type: TYPE_INT
   14     | TYPE_FLOAT
   15     | TYPE_BOOL
   16     | TYPE_VOID

   17 identifier: ID

   18 statement: compoundstmt
   19          | exprstmt
   20          | ctrlstmt
   21          | jumpstmt

   22 compoundstmt: LBR items RBR

   23 items: items item
   24      | ε

   25 item: declaration
   26     | statement

   27 exprstmt: optexpr SEM

   28 optexpr: expr
   29        | ε

   30 expr: identifier OP_ASSIGN expr
   31     | logorexpr

   32 logorexpr: logorexpr OP_LOGOR logandexpr
   33          | logandexpr

   34 logandexpr: logandexpr OP_LOGAND orexpr
   35           | orexpr

   36 orexpr: orexpr OP_OR xorexpr
   37       | xorexpr

   38 xorexpr: xorexpr OP_XOR andexpr
   39        | andexpr

   40 andexpr: andexpr OP_AND ecmprexpr
   41        | ecmprexpr

   42 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   43          | ecmprexpr OP_NEQ cmprexpr
   44          | cmprexpr

   45 cmprexpr: cmprexpr OP_GT addexpr
   46         | cmprexpr OP_LT addexpr
   47         | cmprexpr OP_GTE addexpr
   48         | cmprexpr OP_LTE addexpr
   49         | addexpr

   50 addexpr: addexpr OP_ADD mulexpr
   51        | addexpr OP_SUB mulexpr
   52        | mulexpr

   53 mulexpr: mulexpr OP_MUL primaryexpr
   54        | mulexpr OP_DIV primaryexpr
   55        | mulexpr OP_MOD primaryexpr
   56        | primaryexpr

   57 primaryexpr: identifier
   58            | constant
   59            | LP expr RP
   60            | identifier LP arguments RP
   61            | OP_SUB primaryexpr
   62            | OP_NOT primaryexpr

   63 constant: NUM_INT
   64         | NUM_FLOAT
   65         | NUM_BOOL

   66 arguments: arguments COMMA expr
   67          | expr
   68          | ε

   69 ctrlstmt: IF LP expr RP statement
   70         | IF LP expr RP statement ELSE statement
   71         | WHILE LP expr RP statement
   72         | FOR LP inititem optexpr SEM optexpr RP statement

   73 inititem: exprstmt
   74         | declaration

   75 jumpstmt: RETURN optexpr SEM


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    NUM_INT <intNum> (258) 63
    NUM_FLOAT <floatNum> (259) 64
    NUM_BOOL <boolNum> (260) 65
    ID <str> (261) 17
    TYPE_INT (262) 13
    TYPE_FLOAT (263) 14
    TYPE_BOOL (264) 15
    TYPE_VOID (265) 8 16
    OP_ADD (266) 50
    OP_SUB (267) 51 61
    OP_MUL (268) 53
    OP_DIV (269) 54
    OP_MOD (270) 55
    OP_GT (271) 45
    OP_LT (272) 46
    OP_GTE (273) 47
    OP_LTE (274) 48
    OP_EQ (275) 42
    OP_NEQ (276) 43
    OP_AND (277) 40
    OP_XOR (278) 38
    OP_OR (279) 36
    OP_NOT (280) 62
    OP_LOGAND (281) 34
    OP_LOGOR (282) 32
    OP_ASSIGN (283) 11 30
    LP (284) 5 59 60 69 70 71 72
    RP (285) 5 59 60 69 70 71 72
    LBR (286) 22
    RBR (287) 22
    SEM (288) 10 11 27 72 75
    COMMA (289) 6 66
    IF (290) 69 70
    ELSE (291) 70
    WHILE (292) 71
    FOR (293) 72
    RETURN (294) 75
    IFX (295)


非终结语词，附有它们出现处的规则

    $accept (41)
        on left: 0
    program <unit> (42)
        on left: 1 2
        on right: 0 1
    externdef <node> (43)
        on left: 3 4
        on right: 1
    function <node> (44)
        on left: 5
        on right: 3
    parameters <parameters> (45)
        on left: 6 7 8 9
        on right: 5 6
    declaration <node> (46)
        on left: 10 11
        on right: 4 25 74
    declarator <declarator> (47)
        on left: 12
        on right: 5 6 7 10 11
    type <type> (48)
        on left: 13 14 15 16
        on right: 12
    identifier <identifier> (49)
        on left: 17
        on right: 12 30 57 60
    statement <statement> (50)
        on left: 18 19 20 21
        on right: 26 69 70 71 72
    compoundstmt <compound> (51)
        on left: 22
        on right: 5 18
    items <compound> (52)
        on left: 23 24
        on right: 22 23
    item <node> (53)
        on left: 25 26
        on right: 23
    exprstmt <statement> (54)
        on left: 27
        on right: 19 73
    optexpr <expression> (55)
        on left: 28 29
        on right: 27 72 75
    expr <expression> (56)
        on left: 30 31
        on right: 11 28 30 59 66 67 69 70 71
    logorexpr <expression> (57)
        on left: 32 33
        on right: 31 32
    logandexpr <expression> (58)
        on left: 34 35
        on right: 32 33 34
    orexpr <expression> (59)
        on left: 36 37
        on right: 34 35 36
    xorexpr <expression> (60)
        on left: 38 39
        on right: 36 37 38
    andexpr <expression> (61)
        on left: 40 41
        on right: 38 39 40
    ecmprexpr <expression> (62)
        on left: 42 43 44
        on right: 40 41 42 43
    cmprexpr <expression> (63)
        on left: 45 46 47 48 49
        on right: 42 43 44 45 46 47 48
    addexpr <expression> (64)
        on left: 50 51 52
        on right: 45 46 47 48 49 50 51
    mulexpr <expression> (65)
        on left: 53 54 55 56
        on right: 50 51 52 53 54 55
    primaryexpr <expression> (66)
        on left: 57 58 59 60 61 62
        on right: 53 54 55 56 61 62
    constant <expression> (67)
        on left: 63 64 65
        on right: 58
    arguments <arguments> (68)
        on left: 66 67 68
        on right: 60 66
    ctrlstmt <statement> (69)
        on left: 69 70 71 72
        on right: 20
    inititem <node> (70)
        on left: 73 74
        on right: 72
    jumpstmt <statement> (71)
        on left: 75
        on right: 21


状态 0

    0 $accept: • program $end

    $default  使用规则 2 以归约 (program)

    program  转到状态 1


状态 1

    0 $accept: program • $end
    1 program: program • externdef

    $end        偏移，并进入状态 2
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    externdef    转到状态 7
    function     转到状态 8
    declaration  转到状态 9
    declarator   转到状态 10
    type         转到状态 11


状态 2

    0 $accept: program $end •

    $default  接受


状态 3

   13 type: TYPE_INT •

    $default  使用规则 13 以归约 (type)


状态 4

   14 type: TYPE_FLOAT •

    $default  使用规则 14 以归约 (type)


状态 5

   15 type: TYPE_BOOL •

    $default  使用规则 15 以归约 (type)


状态 6

   16 type: TYPE_VOID •

    $default  使用规则 16 以归约 (type)


状态 7

    1 program: program externdef •

    $default  使用规则 1 以归约 (program)


状态 8

    3 externdef: function •

    $default  使用规则 3 以归约 (externdef)


状态 9

    4 externdef: declaration •

    $default  使用规则 4 以归约 (externdef)


状态 10

    5 function: declarator • LP parameters RP compoundstmt
   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 12
    LP         偏移，并进入状态 13
    SEM        偏移，并进入状态 14


状态 11

   12 declarator: type • identifier

    ID  偏移，并进入状态 15

    identifier  转到状态 16


状态 12

   11 declaration: declarator OP_ASSIGN • expr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 24
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 13

    5 function: declarator LP • parameters RP compoundstmt

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 36

    $default  使用规则 9 以归约 (parameters)

    parameters  转到状态 37
    declarator  转到状态 38
    type        转到状态 11


状态 14

   10 declaration: declarator SEM •

    $default  使用规则 10 以归约 (declaration)


状态 15

   17 identifier: ID •

    $default  使用规则 17 以归约 (identifier)


状态 16

   12 declarator: type identifier •

    $default  使用规则 12 以归约 (declarator)


状态 17

   63 constant: NUM_INT •

    $default  使用规则 63 以归约 (constant)


状态 18

   64 constant: NUM_FLOAT •

    $default  使用规则 64 以归约 (constant)


状态 19

   65 constant: NUM_BOOL •

    $default  使用规则 65 以归约 (constant)


状态 20

   61 primaryexpr: OP_SUB • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    primaryexpr  转到状态 40
    constant     转到状态 35


状态 21

   62 primaryexpr: OP_NOT • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    primaryexpr  转到状态 41
    constant     转到状态 35


状态 22

   59 primaryexpr: LP • expr RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 42
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 23

   30 expr: identifier • OP_ASSIGN expr
   57 primaryexpr: identifier •
   60            | identifier • LP arguments RP

    OP_ASSIGN  偏移，并进入状态 43
    LP         偏移，并进入状态 44

    $default  使用规则 57 以归约 (primaryexpr)


状态 24

   11 declaration: declarator OP_ASSIGN expr • SEM

    SEM  偏移，并进入状态 45


状态 25

   31 expr: logorexpr •
   32 logorexpr: logorexpr • OP_LOGOR logandexpr

    OP_LOGOR  偏移，并进入状态 46

    $default  使用规则 31 以归约 (expr)


状态 26

   33 logorexpr: logandexpr •
   34 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 47

    $default  使用规则 33 以归约 (logorexpr)


状态 27

   35 logandexpr: orexpr •
   36 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 48

    $default  使用规则 35 以归约 (logandexpr)


状态 28

   37 orexpr: xorexpr •
   38 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 49

    $default  使用规则 37 以归约 (orexpr)


状态 29

   39 xorexpr: andexpr •
   40 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 50

    $default  使用规则 39 以归约 (xorexpr)


状态 30

   41 andexpr: ecmprexpr •
   42 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   43          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 51
    OP_NEQ  偏移，并进入状态 52

    $default  使用规则 41 以归约 (andexpr)


状态 31

   44 ecmprexpr: cmprexpr •
   45 cmprexpr: cmprexpr • OP_GT addexpr
   46         | cmprexpr • OP_LT addexpr
   47         | cmprexpr • OP_GTE addexpr
   48         | cmprexpr • OP_LTE addexpr

    OP_GT   偏移，并进入状态 53
    OP_LT   偏移，并进入状态 54
    OP_GTE  偏移，并进入状态 55
    OP_LTE  偏移，并进入状态 56

    $default  使用规则 44 以归约 (ecmprexpr)


状态 32

   49 cmprexpr: addexpr •
   50 addexpr: addexpr • OP_ADD mulexpr
   51        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 57
    OP_SUB  偏移，并进入状态 58

    $default  使用规则 49 以归约 (cmprexpr)


状态 33

   52 addexpr: mulexpr •
   53 mulexpr: mulexpr • OP_MUL primaryexpr
   54        | mulexpr • OP_DIV primaryexpr
   55        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 59
    OP_DIV  偏移，并进入状态 60
    OP_MOD  偏移，并进入状态 61

    $default  使用规则 52 以归约 (addexpr)


状态 34

   56 mulexpr: primaryexpr •

    $default  使用规则 56 以归约 (mulexpr)


状态 35

   58 primaryexpr: constant •

    $default  使用规则 58 以归约 (primaryexpr)


状态 36

    8 parameters: TYPE_VOID •
   16 type: TYPE_VOID •

    ID        使用规则 16 以归约 (type)
    $default  使用规则 8 以归约 (parameters)


状态 37

    5 function: declarator LP parameters • RP compoundstmt
    6 parameters: parameters • COMMA declarator

    RP     偏移，并进入状态 62
    COMMA  偏移，并进入状态 63


状态 38

    7 parameters: declarator •

    $default  使用规则 7 以归约 (parameters)


状态 39

   57 primaryexpr: identifier •
   60            | identifier • LP arguments RP

    LP  偏移，并进入状态 44

    $default  使用规则 57 以归约 (primaryexpr)


状态 40

   61 primaryexpr: OP_SUB primaryexpr •

    $default  使用规则 61 以归约 (primaryexpr)


状态 41

   62 primaryexpr: OP_NOT primaryexpr •

    $default  使用规则 62 以归约 (primaryexpr)


状态 42

   59 primaryexpr: LP expr • RP

    RP  偏移，并进入状态 64


状态 43

   30 expr: identifier OP_ASSIGN • expr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 65
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 44

   60 primaryexpr: identifier LP • arguments RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 68 以归约 (arguments)

    identifier   转到状态 23
    expr         转到状态 66
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35
    arguments    转到状态 67


状态 45

   11 declaration: declarator OP_ASSIGN expr SEM •

    $default  使用规则 11 以归约 (declaration)


状态 46

   32 logorexpr: logorexpr OP_LOGOR • logandexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    logandexpr   转到状态 68
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 47

   34 logandexpr: logandexpr OP_LOGAND • orexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    orexpr       转到状态 69
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 48

   36 orexpr: orexpr OP_OR • xorexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    xorexpr      转到状态 70
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 49

   38 xorexpr: xorexpr OP_XOR • andexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    andexpr      转到状态 71
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 50

   40 andexpr: andexpr OP_AND • ecmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    ecmprexpr    转到状态 72
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 51

   42 ecmprexpr: ecmprexpr OP_EQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    cmprexpr     转到状态 73
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 52

   43 ecmprexpr: ecmprexpr OP_NEQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    cmprexpr     转到状态 74
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 53

   45 cmprexpr: cmprexpr OP_GT • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    addexpr      转到状态 75
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 54

   46 cmprexpr: cmprexpr OP_LT • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    addexpr      转到状态 76
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 55

   47 cmprexpr: cmprexpr OP_GTE • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    addexpr      转到状态 77
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 56

   48 cmprexpr: cmprexpr OP_LTE • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    addexpr      转到状态 78
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 57

   50 addexpr: addexpr OP_ADD • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    mulexpr      转到状态 79
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 58

   51 addexpr: addexpr OP_SUB • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    mulexpr      转到状态 80
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 59

   53 mulexpr: mulexpr OP_MUL • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    primaryexpr  转到状态 81
    constant     转到状态 35


状态 60

   54 mulexpr: mulexpr OP_DIV • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    primaryexpr  转到状态 82
    constant     转到状态 35


状态 61

   55 mulexpr: mulexpr OP_MOD • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 39
    primaryexpr  转到状态 83
    constant     转到状态 35


状态 62

    5 function: declarator LP parameters RP • compoundstmt

    LBR  偏移，并进入状态 84

    compoundstmt  转到状态 85


状态 63

    6 parameters: parameters COMMA • declarator

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    declarator  转到状态 86
    type        转到状态 11


状态 64

   59 primaryexpr: LP expr RP •

    $default  使用规则 59 以归约 (primaryexpr)


状态 65

   30 expr: identifier OP_ASSIGN expr •

    $default  使用规则 30 以归约 (expr)


状态 66

   67 arguments: expr •

    $default  使用规则 67 以归约 (arguments)


状态 67

   60 primaryexpr: identifier LP arguments • RP
   66 arguments: arguments • COMMA expr

    RP     偏移，并进入状态 87
    COMMA  偏移，并进入状态 88


状态 68

   32 logorexpr: logorexpr OP_LOGOR logandexpr •
   34 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 47

    $default  使用规则 32 以归约 (logorexpr)


状态 69

   34 logandexpr: logandexpr OP_LOGAND orexpr •
   36 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 48

    $default  使用规则 34 以归约 (logandexpr)


状态 70

   36 orexpr: orexpr OP_OR xorexpr •
   38 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 49

    $default  使用规则 36 以归约 (orexpr)


状态 71

   38 xorexpr: xorexpr OP_XOR andexpr •
   40 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 50

    $default  使用规则 38 以归约 (xorexpr)


状态 72

   40 andexpr: andexpr OP_AND ecmprexpr •
   42 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   43          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 51
    OP_NEQ  偏移，并进入状态 52

    $default  使用规则 40 以归约 (andexpr)


状态 73

   42 ecmprexpr: ecmprexpr OP_EQ cmprexpr •
   45 cmprexpr: cmprexpr • OP_GT addexpr
   46         | cmprexpr • OP_LT addexpr
   47         | cmprexpr • OP_GTE addexpr
   48         | cmprexpr • OP_LTE addexpr

    OP_GT   偏移，并进入状态 53
    OP_LT   偏移，并进入状态 54
    OP_GTE  偏移，并进入状态 55
    OP_LTE  偏移，并进入状态 56

    $default  使用规则 42 以归约 (ecmprexpr)


状态 74

   43 ecmprexpr: ecmprexpr OP_NEQ cmprexpr •
   45 cmprexpr: cmprexpr • OP_GT addexpr
   46         | cmprexpr • OP_LT addexpr
   47         | cmprexpr • OP_GTE addexpr
   48         | cmprexpr • OP_LTE addexpr

    OP_GT   偏移，并进入状态 53
    OP_LT   偏移，并进入状态 54
    OP_GTE  偏移，并进入状态 55
    OP_LTE  偏移，并进入状态 56

    $default  使用规则 43 以归约 (ecmprexpr)


状态 75

   45 cmprexpr: cmprexpr OP_GT addexpr •
   50 addexpr: addexpr • OP_ADD mulexpr
   51        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 57
    OP_SUB  偏移，并进入状态 58

    $default  使用规则 45 以归约 (cmprexpr)


状态 76

   46 cmprexpr: cmprexpr OP_LT addexpr •
   50 addexpr: addexpr • OP_ADD mulexpr
   51        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 57
    OP_SUB  偏移，并进入状态 58

    $default  使用规则 46 以归约 (cmprexpr)


状态 77

   47 cmprexpr: cmprexpr OP_GTE addexpr •
   50 addexpr: addexpr • OP_ADD mulexpr
   51        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 57
    OP_SUB  偏移，并进入状态 58

    $default  使用规则 47 以归约 (cmprexpr)


状态 78

   48 cmprexpr: cmprexpr OP_LTE addexpr •
   50 addexpr: addexpr • OP_ADD mulexpr
   51        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 57
    OP_SUB  偏移，并进入状态 58

    $default  使用规则 48 以归约 (cmprexpr)


状态 79

   50 addexpr: addexpr OP_ADD mulexpr •
   53 mulexpr: mulexpr • OP_MUL primaryexpr
   54        | mulexpr • OP_DIV primaryexpr
   55        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 59
    OP_DIV  偏移，并进入状态 60
    OP_MOD  偏移，并进入状态 61

    $default  使用规则 50 以归约 (addexpr)


状态 80

   51 addexpr: addexpr OP_SUB mulexpr •
   53 mulexpr: mulexpr • OP_MUL primaryexpr
   54        | mulexpr • OP_DIV primaryexpr
   55        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 59
    OP_DIV  偏移，并进入状态 60
    OP_MOD  偏移，并进入状态 61

    $default  使用规则 51 以归约 (addexpr)


状态 81

   53 mulexpr: mulexpr OP_MUL primaryexpr •

    $default  使用规则 53 以归约 (mulexpr)


状态 82

   54 mulexpr: mulexpr OP_DIV primaryexpr •

    $default  使用规则 54 以归约 (mulexpr)


状态 83

   55 mulexpr: mulexpr OP_MOD primaryexpr •

    $default  使用规则 55 以归约 (mulexpr)


状态 84

   22 compoundstmt: LBR • items RBR

    $default  使用规则 24 以归约 (items)

    items  转到状态 89


状态 85

    5 function: declarator LP parameters RP compoundstmt •

    $default  使用规则 5 以归约 (function)


状态 86

    6 parameters: parameters COMMA declarator •

    $default  使用规则 6 以归约 (parameters)


状态 87

   60 primaryexpr: identifier LP arguments RP •

    $default  使用规则 60 以归约 (primaryexpr)


状态 88

   66 arguments: arguments COMMA • expr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 90
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 89

   22 compoundstmt: LBR items • RBR
   23 items: items • item

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 15
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_SUB      偏移，并进入状态 20
    OP_NOT      偏移，并进入状态 21
    LP          偏移，并进入状态 22
    LBR         偏移，并进入状态 84
    RBR         偏移，并进入状态 91
    IF          偏移，并进入状态 92
    WHILE       偏移，并进入状态 93
    FOR         偏移，并进入状态 94
    RETURN      偏移，并进入状态 95

    $default  使用规则 29 以归约 (optexpr)

    declaration   转到状态 96
    declarator    转到状态 97
    type          转到状态 11
    identifier    转到状态 23
    statement     转到状态 98
    compoundstmt  转到状态 99
    item          转到状态 100
    exprstmt      转到状态 101
    optexpr       转到状态 102
    expr          转到状态 103
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    addexpr       转到状态 32
    mulexpr       转到状态 33
    primaryexpr   转到状态 34
    constant      转到状态 35
    ctrlstmt      转到状态 104
    jumpstmt      转到状态 105


状态 90

   66 arguments: arguments COMMA expr •

    $default  使用规则 66 以归约 (arguments)


状态 91

   22 compoundstmt: LBR items RBR •

    $default  使用规则 22 以归约 (compoundstmt)


状态 92

   69 ctrlstmt: IF • LP expr RP statement
   70         | IF • LP expr RP statement ELSE statement

    LP  偏移，并进入状态 106


状态 93

   71 ctrlstmt: WHILE • LP expr RP statement

    LP  偏移，并进入状态 107


状态 94

   72 ctrlstmt: FOR • LP inititem optexpr SEM optexpr RP statement

    LP  偏移，并进入状态 108


状态 95

   75 jumpstmt: RETURN • optexpr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 23
    optexpr      转到状态 109
    expr         转到状态 103
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 96

   25 item: declaration •

    $default  使用规则 25 以归约 (item)


状态 97

   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 12
    SEM        偏移，并进入状态 14


状态 98

   26 item: statement •

    $default  使用规则 26 以归约 (item)


状态 99

   18 statement: compoundstmt •

    $default  使用规则 18 以归约 (statement)


状态 100

   23 items: items item •

    $default  使用规则 23 以归约 (items)


状态 101

   19 statement: exprstmt •

    $default  使用规则 19 以归约 (statement)


状态 102

   27 exprstmt: optexpr • SEM

    SEM  偏移，并进入状态 110


状态 103

   28 optexpr: expr •

    $default  使用规则 28 以归约 (optexpr)


状态 104

   20 statement: ctrlstmt •

    $default  使用规则 20 以归约 (statement)


状态 105

   21 statement: jumpstmt •

    $default  使用规则 21 以归约 (statement)


状态 106

   69 ctrlstmt: IF LP • expr RP statement
   70         | IF LP • expr RP statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 111
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 107

   71 ctrlstmt: WHILE LP • expr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    identifier   转到状态 23
    expr         转到状态 112
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 108

   72 ctrlstmt: FOR LP • inititem optexpr SEM optexpr RP statement

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 15
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_SUB      偏移，并进入状态 20
    OP_NOT      偏移，并进入状态 21
    LP          偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    declaration  转到状态 113
    declarator   转到状态 97
    type         转到状态 11
    identifier   转到状态 23
    exprstmt     转到状态 114
    optexpr      转到状态 102
    expr         转到状态 103
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35
    inititem     转到状态 115


状态 109

   75 jumpstmt: RETURN optexpr • SEM

    SEM  偏移，并进入状态 116


状态 110

   27 exprstmt: optexpr SEM •

    $default  使用规则 27 以归约 (exprstmt)


状态 111

   69 ctrlstmt: IF LP expr • RP statement
   70         | IF LP expr • RP statement ELSE statement

    RP  偏移，并进入状态 117


状态 112

   71 ctrlstmt: WHILE LP expr • RP statement

    RP  偏移，并进入状态 118


状态 113

   74 inititem: declaration •

    $default  使用规则 74 以归约 (inititem)


状态 114

   73 inititem: exprstmt •

    $default  使用规则 73 以归约 (inititem)


状态 115

   72 ctrlstmt: FOR LP inititem • optexpr SEM optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 23
    optexpr      转到状态 119
    expr         转到状态 103
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 116

   75 jumpstmt: RETURN optexpr SEM •

    $default  使用规则 75 以归约 (jumpstmt)


状态 117

   69 ctrlstmt: IF LP expr RP • statement
   70         | IF LP expr RP • statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 84
    IF         偏移，并进入状态 92
    WHILE      偏移，并进入状态 93
    FOR        偏移，并进入状态 94
    RETURN     偏移，并进入状态 95

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 120
    compoundstmt  转到状态 99
    exprstmt      转到状态 101
    optexpr       转到状态 102
    expr          转到状态 103
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    addexpr       转到状态 32
    mulexpr       转到状态 33
    primaryexpr   转到状态 34
    constant      转到状态 35
    ctrlstmt      转到状态 104
    jumpstmt      转到状态 105


状态 118

   71 ctrlstmt: WHILE LP expr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 84
    IF         偏移，并进入状态 92
    WHILE      偏移，并进入状态 93
    FOR        偏移，并进入状态 94
    RETURN     偏移，并进入状态 95

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 121
    compoundstmt  转到状态 99
    exprstmt      转到状态 101
    optexpr       转到状态 102
    expr          转到状态 103
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    addexpr       转到状态 32
    mulexpr       转到状态 33
    primaryexpr   转到状态 34
    constant      转到状态 35
    ctrlstmt      转到状态 104
    jumpstmt      转到状态 105


状态 119

   72 ctrlstmt: FOR LP inititem optexpr • SEM optexpr RP statement

    SEM  偏移，并进入状态 122


状态 120

   69 ctrlstmt: IF LP expr RP statement •
   70         | IF LP expr RP statement • ELSE statement

    ELSE  偏移，并进入状态 123

    $default  使用规则 69 以归约 (ctrlstmt)


状态 121

   71 ctrlstmt: WHILE LP expr RP statement •

    $default  使用规则 71 以归约 (ctrlstmt)


状态 122

   72 ctrlstmt: FOR LP inititem optexpr SEM • optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 23
    optexpr      转到状态 124
    expr         转到状态 103
    logorexpr    转到状态 25
    logandexpr   转到状态 26
    orexpr       转到状态 27
    xorexpr      转到状态 28
    andexpr      转到状态 29
    ecmprexpr    转到状态 30
    cmprexpr     转到状态 31
    addexpr      转到状态 32
    mulexpr      转到状态 33
    primaryexpr  转到状态 34
    constant     转到状态 35


状态 123

   70 ctrlstmt: IF LP expr RP statement ELSE • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 84
    IF         偏移，并进入状态 92
    WHILE      偏移，并进入状态 93
    FOR        偏移，并进入状态 94
    RETURN     偏移，并进入状态 95

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 125
    compoundstmt  转到状态 99
    exprstmt      转到状态 101
    optexpr       转到状态 102
    expr          转到状态 103
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    addexpr       转到状态 32
    mulexpr       转到状态 33
    primaryexpr   转到状态 34
    constant      转到状态 35
    ctrlstmt      转到状态 104
    jumpstmt      转到状态 105


状态 124

   72 ctrlstmt: FOR LP inititem optexpr SEM optexpr • RP statement

    RP  偏移，并进入状态 126


状态 125

   70 ctrlstmt: IF LP expr RP statement ELSE statement •

    $default  使用规则 70 以归约 (ctrlstmt)


状态 126

   72 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_SUB     偏移，并进入状态 20
    OP_NOT     偏移，并进入状态 21
    LP         偏移，并进入状态 22
    LBR        偏移，并进入状态 84
    IF         偏移，并进入状态 92
    WHILE      偏移，并进入状态 93
    FOR        偏移，并进入状态 94
    RETURN     偏移，并进入状态 95

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 23
    statement     转到状态 127
    compoundstmt  转到状态 99
    exprstmt      转到状态 101
    optexpr       转到状态 102
    expr          转到状态 103
    logorexpr     转到状态 25
    logandexpr    转到状态 26
    orexpr        转到状态 27
    xorexpr       转到状态 28
    andexpr       转到状态 29
    ecmprexpr     转到状态 30
    cmprexpr      转到状态 31
    addexpr       转到状态 32
    mulexpr       转到状态 33
    primaryexpr   转到状态 34
    constant      转到状态 35
    ctrlstmt      转到状态 104
    jumpstmt      转到状态 105


状态 127

   72 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP statement •

    $default  使用规则 72 以归约 (ctrlstmt)
