语法

    0 $accept: program $end

    1 program: program externdef
    2        | ε

    3 externdef: function
    4          | declaration

    5 function: declarator LP parameters RP compoundstmt

    6 parameters: parameters COMMA declarator
    7           | declarator
    8           | TYPE_VOID
    9           | ε

   10 declaration: declarator SEM
   11            | declarator OP_ASSIGN expr SEM

   12 declarator: type identifier

   13 type: TYPE_INT
   14     | TYPE_FLOAT
   15     | TYPE_BOOL
   16     | TYPE_VOID

   17 identifier: ID

   18 statement: compoundstmt
   19          | exprstmt
   20          | ctrlstmt
   21          | jumpstmt

   22 compoundstmt: LBR items RBR

   23 items: items item
   24      | ε

   25 item: declaration
   26     | statement

   27 exprstmt: optexpr SEM

   28 optexpr: expr
   29        | ε

   30 expr: expr COMMA assignexpr
   31     | assignexpr

   32 assignexpr: identifier OP_ASSIGN assignexpr
   33           | identifier OP_ADD_ASSIGN assignexpr
   34           | identifier OP_SUB_ASSIGN assignexpr
   35           | identifier OP_MUL_ASSIGN assignexpr
   36           | identifier OP_DIV_ASSIGN assignexpr
   37           | identifier OP_MOD_ASSIGN assignexpr
   38           | identifier OP_SHL_ASSIGN assignexpr
   39           | identifier OP_SHR_ASSIGN assignexpr
   40           | identifier OP_AND_ASSIGN assignexpr
   41           | identifier OP_OR_ASSIGN assignexpr
   42           | identifier OP_XOR_ASSIGN assignexpr
   43           | condexpr

   44 condexpr: logorexpr QUEST expr COLON condexpr
   45         | logorexpr

   46 logorexpr: logorexpr OP_LOGOR logandexpr
   47          | logandexpr

   48 logandexpr: logandexpr OP_LOGAND orexpr
   49           | orexpr

   50 orexpr: orexpr OP_OR xorexpr
   51       | xorexpr

   52 xorexpr: xorexpr OP_XOR andexpr
   53        | andexpr

   54 andexpr: andexpr OP_AND ecmprexpr
   55        | ecmprexpr

   56 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   57          | ecmprexpr OP_NEQ cmprexpr
   58          | cmprexpr

   59 cmprexpr: cmprexpr OP_GT shiftexpr
   60         | cmprexpr OP_LT shiftexpr
   61         | cmprexpr OP_GTE shiftexpr
   62         | cmprexpr OP_LTE shiftexpr
   63         | shiftexpr

   64 shiftexpr: shiftexpr OP_SHL addexpr
   65          | shiftexpr OP_SHR addexpr
   66          | addexpr

   67 addexpr: addexpr OP_ADD mulexpr
   68        | addexpr OP_SUB mulexpr
   69        | mulexpr

   70 mulexpr: mulexpr OP_MUL primaryexpr
   71        | mulexpr OP_DIV primaryexpr
   72        | mulexpr OP_MOD primaryexpr
   73        | primaryexpr

   74 primaryexpr: identifier
   75            | constant
   76            | LP expr RP
   77            | identifier LP arguments RP
   78            | OP_ADD primaryexpr
   79            | OP_SUB primaryexpr
   80            | OP_NOT primaryexpr

   81 constant: NUM_INT
   82         | NUM_FLOAT
   83         | NUM_BOOL

   84 arguments: arguments COMMA assignexpr
   85          | assignexpr
   86          | ε

   87 ctrlstmt: IF LP expr RP statement
   88         | IF LP expr RP statement ELSE statement
   89         | WHILE LP expr RP statement
   90         | FOR LP inititem optexpr SEM optexpr RP statement

   91 inititem: exprstmt
   92         | declaration

   93 jumpstmt: RETURN optexpr SEM


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    NUM_INT <intNum> (258) 81
    NUM_FLOAT <floatNum> (259) 82
    NUM_BOOL <boolNum> (260) 83
    ID <str> (261) 17
    TYPE_INT (262) 13
    TYPE_FLOAT (263) 14
    TYPE_BOOL (264) 15
    TYPE_VOID (265) 8 16
    OP_ADD (266) 67 78
    OP_SUB (267) 68 79
    OP_MUL (268) 70
    OP_DIV (269) 71
    OP_MOD (270) 72
    OP_SHL (271) 64
    OP_SHR (272) 65
    OP_GT (273) 59
    OP_LT (274) 60
    OP_GTE (275) 61
    OP_LTE (276) 62
    OP_EQ (277) 56
    OP_NEQ (278) 57
    OP_AND (279) 54
    OP_XOR (280) 52
    OP_OR (281) 50
    OP_NOT (282) 80
    OP_LOGAND (283) 48
    OP_LOGOR (284) 46
    OP_ASSIGN (285) 11 32
    OP_ADD_ASSIGN (286) 33
    OP_SUB_ASSIGN (287) 34
    OP_MUL_ASSIGN (288) 35
    OP_DIV_ASSIGN (289) 36
    OP_MOD_ASSIGN (290) 37
    OP_SHL_ASSIGN (291) 38
    OP_SHR_ASSIGN (292) 39
    OP_AND_ASSIGN (293) 40
    OP_OR_ASSIGN (294) 41
    OP_XOR_ASSIGN (295) 42
    LP (296) 5 76 77 87 88 89 90
    RP (297) 5 76 77 87 88 89 90
    LBR (298) 22
    RBR (299) 22
    SEM (300) 10 11 27 90 93
    COMMA (301) 6 30 84
    QUEST (302) 44
    COLON (303) 44
    IF (304) 87 88
    ELSE (305) 88
    WHILE (306) 89
    FOR (307) 90
    RETURN (308) 93
    IFX (309)


非终结语词，附有它们出现处的规则

    $accept (55)
        on left: 0
    program <unit> (56)
        on left: 1 2
        on right: 0 1
    externdef <node> (57)
        on left: 3 4
        on right: 1
    function <node> (58)
        on left: 5
        on right: 3
    parameters <parameters> (59)
        on left: 6 7 8 9
        on right: 5 6
    declaration <node> (60)
        on left: 10 11
        on right: 4 25 92
    declarator <declarator> (61)
        on left: 12
        on right: 5 6 7 10 11
    type <type> (62)
        on left: 13 14 15 16
        on right: 12
    identifier <identifier> (63)
        on left: 17
        on right: 12 32 33 34 35 36 37 38 39 40 41 42 74 77
    statement <statement> (64)
        on left: 18 19 20 21
        on right: 26 87 88 89 90
    compoundstmt <compound> (65)
        on left: 22
        on right: 5 18
    items <compound> (66)
        on left: 23 24
        on right: 22 23
    item <node> (67)
        on left: 25 26
        on right: 23
    exprstmt <statement> (68)
        on left: 27
        on right: 19 91
    optexpr <expression> (69)
        on left: 28 29
        on right: 27 90 93
    expr <expression> (70)
        on left: 30 31
        on right: 11 28 30 44 76 87 88 89
    assignexpr <expression> (71)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 30 31 32 33 34 35 36 37 38 39 40 41 42 84 85
    condexpr <expression> (72)
        on left: 44 45
        on right: 43 44
    logorexpr <expression> (73)
        on left: 46 47
        on right: 44 45 46
    logandexpr <expression> (74)
        on left: 48 49
        on right: 46 47 48
    orexpr <expression> (75)
        on left: 50 51
        on right: 48 49 50
    xorexpr <expression> (76)
        on left: 52 53
        on right: 50 51 52
    andexpr <expression> (77)
        on left: 54 55
        on right: 52 53 54
    ecmprexpr <expression> (78)
        on left: 56 57 58
        on right: 54 55 56 57
    cmprexpr <expression> (79)
        on left: 59 60 61 62 63
        on right: 56 57 58 59 60 61 62
    shiftexpr <expression> (80)
        on left: 64 65 66
        on right: 59 60 61 62 63 64 65
    addexpr <expression> (81)
        on left: 67 68 69
        on right: 64 65 66 67 68
    mulexpr <expression> (82)
        on left: 70 71 72 73
        on right: 67 68 69 70 71 72
    primaryexpr <expression> (83)
        on left: 74 75 76 77 78 79 80
        on right: 70 71 72 73 78 79 80
    constant <expression> (84)
        on left: 81 82 83
        on right: 75
    arguments <arguments> (85)
        on left: 84 85 86
        on right: 77 84
    ctrlstmt <statement> (86)
        on left: 87 88 89 90
        on right: 20
    inititem <node> (87)
        on left: 91 92
        on right: 90
    jumpstmt <statement> (88)
        on left: 93
        on right: 21


状态 0

    0 $accept: • program $end

    $default  使用规则 2 以归约 (program)

    program  转到状态 1


状态 1

    0 $accept: program • $end
    1 program: program • externdef

    $end        偏移，并进入状态 2
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    externdef    转到状态 7
    function     转到状态 8
    declaration  转到状态 9
    declarator   转到状态 10
    type         转到状态 11


状态 2

    0 $accept: program $end •

    $default  接受


状态 3

   13 type: TYPE_INT •

    $default  使用规则 13 以归约 (type)


状态 4

   14 type: TYPE_FLOAT •

    $default  使用规则 14 以归约 (type)


状态 5

   15 type: TYPE_BOOL •

    $default  使用规则 15 以归约 (type)


状态 6

   16 type: TYPE_VOID •

    $default  使用规则 16 以归约 (type)


状态 7

    1 program: program externdef •

    $default  使用规则 1 以归约 (program)


状态 8

    3 externdef: function •

    $default  使用规则 3 以归约 (externdef)


状态 9

    4 externdef: declaration •

    $default  使用规则 4 以归约 (externdef)


状态 10

    5 function: declarator • LP parameters RP compoundstmt
   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 12
    LP         偏移，并进入状态 13
    SEM        偏移，并进入状态 14


状态 11

   12 declarator: type • identifier

    ID  偏移，并进入状态 15

    identifier  转到状态 16


状态 12

   11 declaration: declarator OP_ASSIGN • expr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    expr         转到状态 25
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 13

    5 function: declarator LP • parameters RP compoundstmt

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 40

    $default  使用规则 9 以归约 (parameters)

    parameters  转到状态 41
    declarator  转到状态 42
    type        转到状态 11


状态 14

   10 declaration: declarator SEM •

    $default  使用规则 10 以归约 (declaration)


状态 15

   17 identifier: ID •

    $default  使用规则 17 以归约 (identifier)


状态 16

   12 declarator: type identifier •

    $default  使用规则 12 以归约 (declarator)


状态 17

   81 constant: NUM_INT •

    $default  使用规则 81 以归约 (constant)


状态 18

   82 constant: NUM_FLOAT •

    $default  使用规则 82 以归约 (constant)


状态 19

   83 constant: NUM_BOOL •

    $default  使用规则 83 以归约 (constant)


状态 20

   78 primaryexpr: OP_ADD • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    primaryexpr  转到状态 44
    constant     转到状态 39


状态 21

   79 primaryexpr: OP_SUB • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    primaryexpr  转到状态 45
    constant     转到状态 39


状态 22

   80 primaryexpr: OP_NOT • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    primaryexpr  转到状态 46
    constant     转到状态 39


状态 23

   76 primaryexpr: LP • expr RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    expr         转到状态 47
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 24

   32 assignexpr: identifier • OP_ASSIGN assignexpr
   33           | identifier • OP_ADD_ASSIGN assignexpr
   34           | identifier • OP_SUB_ASSIGN assignexpr
   35           | identifier • OP_MUL_ASSIGN assignexpr
   36           | identifier • OP_DIV_ASSIGN assignexpr
   37           | identifier • OP_MOD_ASSIGN assignexpr
   38           | identifier • OP_SHL_ASSIGN assignexpr
   39           | identifier • OP_SHR_ASSIGN assignexpr
   40           | identifier • OP_AND_ASSIGN assignexpr
   41           | identifier • OP_OR_ASSIGN assignexpr
   42           | identifier • OP_XOR_ASSIGN assignexpr
   74 primaryexpr: identifier •
   77            | identifier • LP arguments RP

    OP_ASSIGN      偏移，并进入状态 48
    OP_ADD_ASSIGN  偏移，并进入状态 49
    OP_SUB_ASSIGN  偏移，并进入状态 50
    OP_MUL_ASSIGN  偏移，并进入状态 51
    OP_DIV_ASSIGN  偏移，并进入状态 52
    OP_MOD_ASSIGN  偏移，并进入状态 53
    OP_SHL_ASSIGN  偏移，并进入状态 54
    OP_SHR_ASSIGN  偏移，并进入状态 55
    OP_AND_ASSIGN  偏移，并进入状态 56
    OP_OR_ASSIGN   偏移，并进入状态 57
    OP_XOR_ASSIGN  偏移，并进入状态 58
    LP             偏移，并进入状态 59

    $default  使用规则 74 以归约 (primaryexpr)


状态 25

   11 declaration: declarator OP_ASSIGN expr • SEM
   30 expr: expr • COMMA assignexpr

    SEM    偏移，并进入状态 60
    COMMA  偏移，并进入状态 61


状态 26

   31 expr: assignexpr •

    $default  使用规则 31 以归约 (expr)


状态 27

   43 assignexpr: condexpr •

    $default  使用规则 43 以归约 (assignexpr)


状态 28

   44 condexpr: logorexpr • QUEST expr COLON condexpr
   45         | logorexpr •
   46 logorexpr: logorexpr • OP_LOGOR logandexpr

    OP_LOGOR  偏移，并进入状态 62
    QUEST     偏移，并进入状态 63

    $default  使用规则 45 以归约 (condexpr)


状态 29

   47 logorexpr: logandexpr •
   48 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 64

    $default  使用规则 47 以归约 (logorexpr)


状态 30

   49 logandexpr: orexpr •
   50 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 65

    $default  使用规则 49 以归约 (logandexpr)


状态 31

   51 orexpr: xorexpr •
   52 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 66

    $default  使用规则 51 以归约 (orexpr)


状态 32

   53 xorexpr: andexpr •
   54 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 67

    $default  使用规则 53 以归约 (xorexpr)


状态 33

   55 andexpr: ecmprexpr •
   56 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   57          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 68
    OP_NEQ  偏移，并进入状态 69

    $default  使用规则 55 以归约 (andexpr)


状态 34

   58 ecmprexpr: cmprexpr •
   59 cmprexpr: cmprexpr • OP_GT shiftexpr
   60         | cmprexpr • OP_LT shiftexpr
   61         | cmprexpr • OP_GTE shiftexpr
   62         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 70
    OP_LT   偏移，并进入状态 71
    OP_GTE  偏移，并进入状态 72
    OP_LTE  偏移，并进入状态 73

    $default  使用规则 58 以归约 (ecmprexpr)


状态 35

   63 cmprexpr: shiftexpr •
   64 shiftexpr: shiftexpr • OP_SHL addexpr
   65          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 74
    OP_SHR  偏移，并进入状态 75

    $default  使用规则 63 以归约 (cmprexpr)


状态 36

   66 shiftexpr: addexpr •
   67 addexpr: addexpr • OP_ADD mulexpr
   68        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 76
    OP_SUB  偏移，并进入状态 77

    $default  使用规则 66 以归约 (shiftexpr)


状态 37

   69 addexpr: mulexpr •
   70 mulexpr: mulexpr • OP_MUL primaryexpr
   71        | mulexpr • OP_DIV primaryexpr
   72        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 78
    OP_DIV  偏移，并进入状态 79
    OP_MOD  偏移，并进入状态 80

    $default  使用规则 69 以归约 (addexpr)


状态 38

   73 mulexpr: primaryexpr •

    $default  使用规则 73 以归约 (mulexpr)


状态 39

   75 primaryexpr: constant •

    $default  使用规则 75 以归约 (primaryexpr)


状态 40

    8 parameters: TYPE_VOID •
   16 type: TYPE_VOID •

    ID        使用规则 16 以归约 (type)
    $default  使用规则 8 以归约 (parameters)


状态 41

    5 function: declarator LP parameters • RP compoundstmt
    6 parameters: parameters • COMMA declarator

    RP     偏移，并进入状态 81
    COMMA  偏移，并进入状态 82


状态 42

    7 parameters: declarator •

    $default  使用规则 7 以归约 (parameters)


状态 43

   74 primaryexpr: identifier •
   77            | identifier • LP arguments RP

    LP  偏移，并进入状态 59

    $default  使用规则 74 以归约 (primaryexpr)


状态 44

   78 primaryexpr: OP_ADD primaryexpr •

    $default  使用规则 78 以归约 (primaryexpr)


状态 45

   79 primaryexpr: OP_SUB primaryexpr •

    $default  使用规则 79 以归约 (primaryexpr)


状态 46

   80 primaryexpr: OP_NOT primaryexpr •

    $default  使用规则 80 以归约 (primaryexpr)


状态 47

   30 expr: expr • COMMA assignexpr
   76 primaryexpr: LP expr • RP

    RP     偏移，并进入状态 83
    COMMA  偏移，并进入状态 61


状态 48

   32 assignexpr: identifier OP_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 84
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 49

   33 assignexpr: identifier OP_ADD_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 85
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 50

   34 assignexpr: identifier OP_SUB_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 86
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 51

   35 assignexpr: identifier OP_MUL_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 87
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 52

   36 assignexpr: identifier OP_DIV_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 88
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 53

   37 assignexpr: identifier OP_MOD_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 89
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 54

   38 assignexpr: identifier OP_SHL_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 90
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 55

   39 assignexpr: identifier OP_SHR_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 91
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 56

   40 assignexpr: identifier OP_AND_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 92
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 57

   41 assignexpr: identifier OP_OR_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 93
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 58

   42 assignexpr: identifier OP_XOR_ASSIGN • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 94
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 59

   77 primaryexpr: identifier LP • arguments RP

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    $default  使用规则 86 以归约 (arguments)

    identifier   转到状态 24
    assignexpr   转到状态 95
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39
    arguments    转到状态 96


状态 60

   11 declaration: declarator OP_ASSIGN expr SEM •

    $default  使用规则 11 以归约 (declaration)


状态 61

   30 expr: expr COMMA • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 97
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 62

   46 logorexpr: logorexpr OP_LOGOR • logandexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    logandexpr   转到状态 98
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 63

   44 condexpr: logorexpr QUEST • expr COLON condexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    expr         转到状态 99
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 64

   48 logandexpr: logandexpr OP_LOGAND • orexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    orexpr       转到状态 100
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 65

   50 orexpr: orexpr OP_OR • xorexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    xorexpr      转到状态 101
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 66

   52 xorexpr: xorexpr OP_XOR • andexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    andexpr      转到状态 102
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 67

   54 andexpr: andexpr OP_AND • ecmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    ecmprexpr    转到状态 103
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 68

   56 ecmprexpr: ecmprexpr OP_EQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    cmprexpr     转到状态 104
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 69

   57 ecmprexpr: ecmprexpr OP_NEQ • cmprexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    cmprexpr     转到状态 105
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 70

   59 cmprexpr: cmprexpr OP_GT • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    shiftexpr    转到状态 106
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 71

   60 cmprexpr: cmprexpr OP_LT • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    shiftexpr    转到状态 107
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 72

   61 cmprexpr: cmprexpr OP_GTE • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    shiftexpr    转到状态 108
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 73

   62 cmprexpr: cmprexpr OP_LTE • shiftexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    shiftexpr    转到状态 109
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 74

   64 shiftexpr: shiftexpr OP_SHL • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    addexpr      转到状态 110
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 75

   65 shiftexpr: shiftexpr OP_SHR • addexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    addexpr      转到状态 111
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 76

   67 addexpr: addexpr OP_ADD • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    mulexpr      转到状态 112
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 77

   68 addexpr: addexpr OP_SUB • mulexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    mulexpr      转到状态 113
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 78

   70 mulexpr: mulexpr OP_MUL • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    primaryexpr  转到状态 114
    constant     转到状态 39


状态 79

   71 mulexpr: mulexpr OP_DIV • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    primaryexpr  转到状态 115
    constant     转到状态 39


状态 80

   72 mulexpr: mulexpr OP_MOD • primaryexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    primaryexpr  转到状态 116
    constant     转到状态 39


状态 81

    5 function: declarator LP parameters RP • compoundstmt

    LBR  偏移，并进入状态 117

    compoundstmt  转到状态 118


状态 82

    6 parameters: parameters COMMA • declarator

    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6

    declarator  转到状态 119
    type        转到状态 11


状态 83

   76 primaryexpr: LP expr RP •

    $default  使用规则 76 以归约 (primaryexpr)


状态 84

   32 assignexpr: identifier OP_ASSIGN assignexpr •

    $default  使用规则 32 以归约 (assignexpr)


状态 85

   33 assignexpr: identifier OP_ADD_ASSIGN assignexpr •

    $default  使用规则 33 以归约 (assignexpr)


状态 86

   34 assignexpr: identifier OP_SUB_ASSIGN assignexpr •

    $default  使用规则 34 以归约 (assignexpr)


状态 87

   35 assignexpr: identifier OP_MUL_ASSIGN assignexpr •

    $default  使用规则 35 以归约 (assignexpr)


状态 88

   36 assignexpr: identifier OP_DIV_ASSIGN assignexpr •

    $default  使用规则 36 以归约 (assignexpr)


状态 89

   37 assignexpr: identifier OP_MOD_ASSIGN assignexpr •

    $default  使用规则 37 以归约 (assignexpr)


状态 90

   38 assignexpr: identifier OP_SHL_ASSIGN assignexpr •

    $default  使用规则 38 以归约 (assignexpr)


状态 91

   39 assignexpr: identifier OP_SHR_ASSIGN assignexpr •

    $default  使用规则 39 以归约 (assignexpr)


状态 92

   40 assignexpr: identifier OP_AND_ASSIGN assignexpr •

    $default  使用规则 40 以归约 (assignexpr)


状态 93

   41 assignexpr: identifier OP_OR_ASSIGN assignexpr •

    $default  使用规则 41 以归约 (assignexpr)


状态 94

   42 assignexpr: identifier OP_XOR_ASSIGN assignexpr •

    $default  使用规则 42 以归约 (assignexpr)


状态 95

   85 arguments: assignexpr •

    $default  使用规则 85 以归约 (arguments)


状态 96

   77 primaryexpr: identifier LP arguments • RP
   84 arguments: arguments • COMMA assignexpr

    RP     偏移，并进入状态 120
    COMMA  偏移，并进入状态 121


状态 97

   30 expr: expr COMMA assignexpr •

    $default  使用规则 30 以归约 (expr)


状态 98

   46 logorexpr: logorexpr OP_LOGOR logandexpr •
   48 logandexpr: logandexpr • OP_LOGAND orexpr

    OP_LOGAND  偏移，并进入状态 64

    $default  使用规则 46 以归约 (logorexpr)


状态 99

   30 expr: expr • COMMA assignexpr
   44 condexpr: logorexpr QUEST expr • COLON condexpr

    COMMA  偏移，并进入状态 61
    COLON  偏移，并进入状态 122


状态 100

   48 logandexpr: logandexpr OP_LOGAND orexpr •
   50 orexpr: orexpr • OP_OR xorexpr

    OP_OR  偏移，并进入状态 65

    $default  使用规则 48 以归约 (logandexpr)


状态 101

   50 orexpr: orexpr OP_OR xorexpr •
   52 xorexpr: xorexpr • OP_XOR andexpr

    OP_XOR  偏移，并进入状态 66

    $default  使用规则 50 以归约 (orexpr)


状态 102

   52 xorexpr: xorexpr OP_XOR andexpr •
   54 andexpr: andexpr • OP_AND ecmprexpr

    OP_AND  偏移，并进入状态 67

    $default  使用规则 52 以归约 (xorexpr)


状态 103

   54 andexpr: andexpr OP_AND ecmprexpr •
   56 ecmprexpr: ecmprexpr • OP_EQ cmprexpr
   57          | ecmprexpr • OP_NEQ cmprexpr

    OP_EQ   偏移，并进入状态 68
    OP_NEQ  偏移，并进入状态 69

    $default  使用规则 54 以归约 (andexpr)


状态 104

   56 ecmprexpr: ecmprexpr OP_EQ cmprexpr •
   59 cmprexpr: cmprexpr • OP_GT shiftexpr
   60         | cmprexpr • OP_LT shiftexpr
   61         | cmprexpr • OP_GTE shiftexpr
   62         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 70
    OP_LT   偏移，并进入状态 71
    OP_GTE  偏移，并进入状态 72
    OP_LTE  偏移，并进入状态 73

    $default  使用规则 56 以归约 (ecmprexpr)


状态 105

   57 ecmprexpr: ecmprexpr OP_NEQ cmprexpr •
   59 cmprexpr: cmprexpr • OP_GT shiftexpr
   60         | cmprexpr • OP_LT shiftexpr
   61         | cmprexpr • OP_GTE shiftexpr
   62         | cmprexpr • OP_LTE shiftexpr

    OP_GT   偏移，并进入状态 70
    OP_LT   偏移，并进入状态 71
    OP_GTE  偏移，并进入状态 72
    OP_LTE  偏移，并进入状态 73

    $default  使用规则 57 以归约 (ecmprexpr)


状态 106

   59 cmprexpr: cmprexpr OP_GT shiftexpr •
   64 shiftexpr: shiftexpr • OP_SHL addexpr
   65          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 74
    OP_SHR  偏移，并进入状态 75

    $default  使用规则 59 以归约 (cmprexpr)


状态 107

   60 cmprexpr: cmprexpr OP_LT shiftexpr •
   64 shiftexpr: shiftexpr • OP_SHL addexpr
   65          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 74
    OP_SHR  偏移，并进入状态 75

    $default  使用规则 60 以归约 (cmprexpr)


状态 108

   61 cmprexpr: cmprexpr OP_GTE shiftexpr •
   64 shiftexpr: shiftexpr • OP_SHL addexpr
   65          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 74
    OP_SHR  偏移，并进入状态 75

    $default  使用规则 61 以归约 (cmprexpr)


状态 109

   62 cmprexpr: cmprexpr OP_LTE shiftexpr •
   64 shiftexpr: shiftexpr • OP_SHL addexpr
   65          | shiftexpr • OP_SHR addexpr

    OP_SHL  偏移，并进入状态 74
    OP_SHR  偏移，并进入状态 75

    $default  使用规则 62 以归约 (cmprexpr)


状态 110

   64 shiftexpr: shiftexpr OP_SHL addexpr •
   67 addexpr: addexpr • OP_ADD mulexpr
   68        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 76
    OP_SUB  偏移，并进入状态 77

    $default  使用规则 64 以归约 (shiftexpr)


状态 111

   65 shiftexpr: shiftexpr OP_SHR addexpr •
   67 addexpr: addexpr • OP_ADD mulexpr
   68        | addexpr • OP_SUB mulexpr

    OP_ADD  偏移，并进入状态 76
    OP_SUB  偏移，并进入状态 77

    $default  使用规则 65 以归约 (shiftexpr)


状态 112

   67 addexpr: addexpr OP_ADD mulexpr •
   70 mulexpr: mulexpr • OP_MUL primaryexpr
   71        | mulexpr • OP_DIV primaryexpr
   72        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 78
    OP_DIV  偏移，并进入状态 79
    OP_MOD  偏移，并进入状态 80

    $default  使用规则 67 以归约 (addexpr)


状态 113

   68 addexpr: addexpr OP_SUB mulexpr •
   70 mulexpr: mulexpr • OP_MUL primaryexpr
   71        | mulexpr • OP_DIV primaryexpr
   72        | mulexpr • OP_MOD primaryexpr

    OP_MUL  偏移，并进入状态 78
    OP_DIV  偏移，并进入状态 79
    OP_MOD  偏移，并进入状态 80

    $default  使用规则 68 以归约 (addexpr)


状态 114

   70 mulexpr: mulexpr OP_MUL primaryexpr •

    $default  使用规则 70 以归约 (mulexpr)


状态 115

   71 mulexpr: mulexpr OP_DIV primaryexpr •

    $default  使用规则 71 以归约 (mulexpr)


状态 116

   72 mulexpr: mulexpr OP_MOD primaryexpr •

    $default  使用规则 72 以归约 (mulexpr)


状态 117

   22 compoundstmt: LBR • items RBR

    $default  使用规则 24 以归约 (items)

    items  转到状态 123


状态 118

    5 function: declarator LP parameters RP compoundstmt •

    $default  使用规则 5 以归约 (function)


状态 119

    6 parameters: parameters COMMA declarator •

    $default  使用规则 6 以归约 (parameters)


状态 120

   77 primaryexpr: identifier LP arguments RP •

    $default  使用规则 77 以归约 (primaryexpr)


状态 121

   84 arguments: arguments COMMA • assignexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    assignexpr   转到状态 124
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 122

   44 condexpr: logorexpr QUEST expr COLON • condexpr

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 43
    condexpr     转到状态 125
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 123

   22 compoundstmt: LBR items • RBR
   23 items: items • item

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 15
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_ADD      偏移，并进入状态 20
    OP_SUB      偏移，并进入状态 21
    OP_NOT      偏移，并进入状态 22
    LP          偏移，并进入状态 23
    LBR         偏移，并进入状态 117
    RBR         偏移，并进入状态 126
    IF          偏移，并进入状态 127
    WHILE       偏移，并进入状态 128
    FOR         偏移，并进入状态 129
    RETURN      偏移，并进入状态 130

    $default  使用规则 29 以归约 (optexpr)

    declaration   转到状态 131
    declarator    转到状态 132
    type          转到状态 11
    identifier    转到状态 24
    statement     转到状态 133
    compoundstmt  转到状态 134
    item          转到状态 135
    exprstmt      转到状态 136
    optexpr       转到状态 137
    expr          转到状态 138
    assignexpr    转到状态 26
    condexpr      转到状态 27
    logorexpr     转到状态 28
    logandexpr    转到状态 29
    orexpr        转到状态 30
    xorexpr       转到状态 31
    andexpr       转到状态 32
    ecmprexpr     转到状态 33
    cmprexpr      转到状态 34
    shiftexpr     转到状态 35
    addexpr       转到状态 36
    mulexpr       转到状态 37
    primaryexpr   转到状态 38
    constant      转到状态 39
    ctrlstmt      转到状态 139
    jumpstmt      转到状态 140


状态 124

   84 arguments: arguments COMMA assignexpr •

    $default  使用规则 84 以归约 (arguments)


状态 125

   44 condexpr: logorexpr QUEST expr COLON condexpr •

    $default  使用规则 44 以归约 (condexpr)


状态 126

   22 compoundstmt: LBR items RBR •

    $default  使用规则 22 以归约 (compoundstmt)


状态 127

   87 ctrlstmt: IF • LP expr RP statement
   88         | IF • LP expr RP statement ELSE statement

    LP  偏移，并进入状态 141


状态 128

   89 ctrlstmt: WHILE • LP expr RP statement

    LP  偏移，并进入状态 142


状态 129

   90 ctrlstmt: FOR • LP inititem optexpr SEM optexpr RP statement

    LP  偏移，并进入状态 143


状态 130

   93 jumpstmt: RETURN • optexpr SEM

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 24
    optexpr      转到状态 144
    expr         转到状态 138
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 131

   25 item: declaration •

    $default  使用规则 25 以归约 (item)


状态 132

   10 declaration: declarator • SEM
   11            | declarator • OP_ASSIGN expr SEM

    OP_ASSIGN  偏移，并进入状态 12
    SEM        偏移，并进入状态 14


状态 133

   26 item: statement •

    $default  使用规则 26 以归约 (item)


状态 134

   18 statement: compoundstmt •

    $default  使用规则 18 以归约 (statement)


状态 135

   23 items: items item •

    $default  使用规则 23 以归约 (items)


状态 136

   19 statement: exprstmt •

    $default  使用规则 19 以归约 (statement)


状态 137

   27 exprstmt: optexpr • SEM

    SEM  偏移，并进入状态 145


状态 138

   28 optexpr: expr •
   30 expr: expr • COMMA assignexpr

    COMMA  偏移，并进入状态 61

    $default  使用规则 28 以归约 (optexpr)


状态 139

   20 statement: ctrlstmt •

    $default  使用规则 20 以归约 (statement)


状态 140

   21 statement: jumpstmt •

    $default  使用规则 21 以归约 (statement)


状态 141

   87 ctrlstmt: IF LP • expr RP statement
   88         | IF LP • expr RP statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    expr         转到状态 146
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 142

   89 ctrlstmt: WHILE LP • expr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    identifier   转到状态 24
    expr         转到状态 147
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 143

   90 ctrlstmt: FOR LP • inititem optexpr SEM optexpr RP statement

    NUM_INT     偏移，并进入状态 17
    NUM_FLOAT   偏移，并进入状态 18
    NUM_BOOL    偏移，并进入状态 19
    ID          偏移，并进入状态 15
    TYPE_INT    偏移，并进入状态 3
    TYPE_FLOAT  偏移，并进入状态 4
    TYPE_BOOL   偏移，并进入状态 5
    TYPE_VOID   偏移，并进入状态 6
    OP_ADD      偏移，并进入状态 20
    OP_SUB      偏移，并进入状态 21
    OP_NOT      偏移，并进入状态 22
    LP          偏移，并进入状态 23

    $default  使用规则 29 以归约 (optexpr)

    declaration  转到状态 148
    declarator   转到状态 132
    type         转到状态 11
    identifier   转到状态 24
    exprstmt     转到状态 149
    optexpr      转到状态 137
    expr         转到状态 138
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39
    inititem     转到状态 150


状态 144

   93 jumpstmt: RETURN optexpr • SEM

    SEM  偏移，并进入状态 151


状态 145

   27 exprstmt: optexpr SEM •

    $default  使用规则 27 以归约 (exprstmt)


状态 146

   30 expr: expr • COMMA assignexpr
   87 ctrlstmt: IF LP expr • RP statement
   88         | IF LP expr • RP statement ELSE statement

    RP     偏移，并进入状态 152
    COMMA  偏移，并进入状态 61


状态 147

   30 expr: expr • COMMA assignexpr
   89 ctrlstmt: WHILE LP expr • RP statement

    RP     偏移，并进入状态 153
    COMMA  偏移，并进入状态 61


状态 148

   92 inititem: declaration •

    $default  使用规则 92 以归约 (inititem)


状态 149

   91 inititem: exprstmt •

    $default  使用规则 91 以归约 (inititem)


状态 150

   90 ctrlstmt: FOR LP inititem • optexpr SEM optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 24
    optexpr      转到状态 154
    expr         转到状态 138
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 151

   93 jumpstmt: RETURN optexpr SEM •

    $default  使用规则 93 以归约 (jumpstmt)


状态 152

   87 ctrlstmt: IF LP expr RP • statement
   88         | IF LP expr RP • statement ELSE statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23
    LBR        偏移，并进入状态 117
    IF         偏移，并进入状态 127
    WHILE      偏移，并进入状态 128
    FOR        偏移，并进入状态 129
    RETURN     偏移，并进入状态 130

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 24
    statement     转到状态 155
    compoundstmt  转到状态 134
    exprstmt      转到状态 136
    optexpr       转到状态 137
    expr          转到状态 138
    assignexpr    转到状态 26
    condexpr      转到状态 27
    logorexpr     转到状态 28
    logandexpr    转到状态 29
    orexpr        转到状态 30
    xorexpr       转到状态 31
    andexpr       转到状态 32
    ecmprexpr     转到状态 33
    cmprexpr      转到状态 34
    shiftexpr     转到状态 35
    addexpr       转到状态 36
    mulexpr       转到状态 37
    primaryexpr   转到状态 38
    constant      转到状态 39
    ctrlstmt      转到状态 139
    jumpstmt      转到状态 140


状态 153

   89 ctrlstmt: WHILE LP expr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23
    LBR        偏移，并进入状态 117
    IF         偏移，并进入状态 127
    WHILE      偏移，并进入状态 128
    FOR        偏移，并进入状态 129
    RETURN     偏移，并进入状态 130

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 24
    statement     转到状态 156
    compoundstmt  转到状态 134
    exprstmt      转到状态 136
    optexpr       转到状态 137
    expr          转到状态 138
    assignexpr    转到状态 26
    condexpr      转到状态 27
    logorexpr     转到状态 28
    logandexpr    转到状态 29
    orexpr        转到状态 30
    xorexpr       转到状态 31
    andexpr       转到状态 32
    ecmprexpr     转到状态 33
    cmprexpr      转到状态 34
    shiftexpr     转到状态 35
    addexpr       转到状态 36
    mulexpr       转到状态 37
    primaryexpr   转到状态 38
    constant      转到状态 39
    ctrlstmt      转到状态 139
    jumpstmt      转到状态 140


状态 154

   90 ctrlstmt: FOR LP inititem optexpr • SEM optexpr RP statement

    SEM  偏移，并进入状态 157


状态 155

   87 ctrlstmt: IF LP expr RP statement •
   88         | IF LP expr RP statement • ELSE statement

    ELSE  偏移，并进入状态 158

    $default  使用规则 87 以归约 (ctrlstmt)


状态 156

   89 ctrlstmt: WHILE LP expr RP statement •

    $default  使用规则 89 以归约 (ctrlstmt)


状态 157

   90 ctrlstmt: FOR LP inititem optexpr SEM • optexpr RP statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23

    $default  使用规则 29 以归约 (optexpr)

    identifier   转到状态 24
    optexpr      转到状态 159
    expr         转到状态 138
    assignexpr   转到状态 26
    condexpr     转到状态 27
    logorexpr    转到状态 28
    logandexpr   转到状态 29
    orexpr       转到状态 30
    xorexpr      转到状态 31
    andexpr      转到状态 32
    ecmprexpr    转到状态 33
    cmprexpr     转到状态 34
    shiftexpr    转到状态 35
    addexpr      转到状态 36
    mulexpr      转到状态 37
    primaryexpr  转到状态 38
    constant     转到状态 39


状态 158

   88 ctrlstmt: IF LP expr RP statement ELSE • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23
    LBR        偏移，并进入状态 117
    IF         偏移，并进入状态 127
    WHILE      偏移，并进入状态 128
    FOR        偏移，并进入状态 129
    RETURN     偏移，并进入状态 130

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 24
    statement     转到状态 160
    compoundstmt  转到状态 134
    exprstmt      转到状态 136
    optexpr       转到状态 137
    expr          转到状态 138
    assignexpr    转到状态 26
    condexpr      转到状态 27
    logorexpr     转到状态 28
    logandexpr    转到状态 29
    orexpr        转到状态 30
    xorexpr       转到状态 31
    andexpr       转到状态 32
    ecmprexpr     转到状态 33
    cmprexpr      转到状态 34
    shiftexpr     转到状态 35
    addexpr       转到状态 36
    mulexpr       转到状态 37
    primaryexpr   转到状态 38
    constant      转到状态 39
    ctrlstmt      转到状态 139
    jumpstmt      转到状态 140


状态 159

   90 ctrlstmt: FOR LP inititem optexpr SEM optexpr • RP statement

    RP  偏移，并进入状态 161


状态 160

   88 ctrlstmt: IF LP expr RP statement ELSE statement •

    $default  使用规则 88 以归约 (ctrlstmt)


状态 161

   90 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP • statement

    NUM_INT    偏移，并进入状态 17
    NUM_FLOAT  偏移，并进入状态 18
    NUM_BOOL   偏移，并进入状态 19
    ID         偏移，并进入状态 15
    OP_ADD     偏移，并进入状态 20
    OP_SUB     偏移，并进入状态 21
    OP_NOT     偏移，并进入状态 22
    LP         偏移，并进入状态 23
    LBR        偏移，并进入状态 117
    IF         偏移，并进入状态 127
    WHILE      偏移，并进入状态 128
    FOR        偏移，并进入状态 129
    RETURN     偏移，并进入状态 130

    $default  使用规则 29 以归约 (optexpr)

    identifier    转到状态 24
    statement     转到状态 162
    compoundstmt  转到状态 134
    exprstmt      转到状态 136
    optexpr       转到状态 137
    expr          转到状态 138
    assignexpr    转到状态 26
    condexpr      转到状态 27
    logorexpr     转到状态 28
    logandexpr    转到状态 29
    orexpr        转到状态 30
    xorexpr       转到状态 31
    andexpr       转到状态 32
    ecmprexpr     转到状态 33
    cmprexpr      转到状态 34
    shiftexpr     转到状态 35
    addexpr       转到状态 36
    mulexpr       转到状态 37
    primaryexpr   转到状态 38
    constant      转到状态 39
    ctrlstmt      转到状态 139
    jumpstmt      转到状态 140


状态 162

   90 ctrlstmt: FOR LP inititem optexpr SEM optexpr RP statement •

    $default  使用规则 90 以归约 (ctrlstmt)
